{"version":3,"sources":["utilities/AuthContext.js","utilities/PrivateRoute.js","utilities/AuthenticatedRoute.js","utilities/getCookie.js","icons/SadIcon.js","handlers/PageNotFound.js","base/Logout.js","base/Navbar.js","base/Login.js","base/Register.js","base/Base.js","base/Landing.js","tweets/TweetCreate.js","tweets/LikeBtn.js","tweets/RetweetBtn.js","tweets/Retweet.js","tweets/Tweet.js","tweets/RetweetCreate.js","tweets/Tweets.js","profiles/FollowBtn.js","profiles/Profile.js","profiles/SearchProfiles.js","profiles/FollowList.js","profiles/Profiles.js","settings/ProfileSettings.js","settings/PasswordSettings.js","settings/EmailSettings.js","settings/DeleteAccount.js","icons/BackIcon.js","settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","isAuthenticated","setIsAuthenticated","CSRF","PrivateRoute","children","rest","useContext","render","location","to","pathname","state","from","AuthenticatedRoute","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","SadIcon","id","xmlns","viewBox","d","fill","cx","cy","r","PageNotFound","props","className","Logout","history","useHistory","onClick","fetch","method","headers","credentials","then","response","status","push","catch","error","alert","Navbar","useState","userName","setUserName","isAuthenticatedState","setIsAuthenticatedState","useEffect","json","Error","statusText","data","username","console","log","activeClassName","Login","password","setPassword","handleLogin","event","preventDefault","request","body","JSON","stringify","onSubmit","e","action","htmlFor","type","value","onChange","target","required","autoComplete","Register","setName","password2","setPassword2","email","setEmail","handleRegister","Object","keys","Base","exact","path","Landing","TweetCreate","content","setContent","tweetBtn","useRef","tweetCounter","current","disabled","style","color","onTweetAdd","handleTweet","cols","rows","placeholder","ref","LikeBtn","tweetLikes","likes","setLikes","isLiked","setIsLiked","isLoaded","setIsLoaded","handleLike","tweetId","url","onDoubleClick","RetweetBtn","tweet","Retweet","key","src","profile_pic","alt","Tweet","is_retweet","retweet","RetweetCreate","useLocation","handleRetweet","Tweets","tweets","setTweets","setError","isTweetAdded","setIsTweetAdded","map","FollowBtn","isFollowed","setIsFollowed","handleFollow","onFollowersChange","message","Profile","user","setUser","userData","setUserData","profileData","setProfileData","tweetsData","setTweetsData","followersFlag","setFollowersFlag","useParams","user_data","profile_data","tweets_data","tweets_count","is_current_user","is_followed","bio","date_joined","birthday","following_count","followers_count","SearchProfiles","setUsers","setUsername","FollowList","followList","setFollowList","followType","follow_list","profile","Profiles","ProfileSettings","setBio","setBirthday","profilePic","setProfilePic","FormData","append","handleUpdate","encType","accept","files","PasswordSettings","oldPassword","setOldPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","old_password","new_password","new_password2","includes","success","failure","EmailSettings","LogoutallSettings","getElementById","display","handleConfirm","Authorization","localStorage","getItem","handleDelete","BackIcon","width","height","Settings","DeleteAccount","App","setCSRF","Provider","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2908e526.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AuthContext = React.createContext({\r\n  isAuthenticated: false,\r\n  setIsAuthenticated: () => {},\r\n  CSRF: null \r\n})\r\n\r\nexport default AuthContext","import React, {useContext} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthContext from './AuthContext'\r\n\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/auth/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, {useContext} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthContext from './AuthContext'\r\n\r\n\r\nconst AuthenticatedRoute = ({children, ...rest}) => {\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      !isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/home',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","const getCookie = (name) => {\r\n  let cookieValue = null\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';')\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport default getCookie","import React from 'react'\r\nimport './Icon.css'\r\n\r\nconst SadIcon = () => {\r\n  return (\r\n      <svg id=\"sad\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n        <circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\"/>\r\n        <circle cx=\"8.5\" cy=\"9.5\" r=\"1.5\"/>\r\n        <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z\"/>\r\n      </svg>\r\n  )\r\n}\r\n\r\nexport default SadIcon","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Handlers.css'\r\nimport SadIcon from './../icons/SadIcon'\r\n\r\nconst PageNotFound = (props) => {\r\n  return (\r\n    <main id=\"page-not-found\">\r\n      <h1 className=\"centered\">\r\n        Sorry, the page You are looking for can not be found\r\n      </h1>\r\n      <SadIcon />\r\n      <Link to={props.to}>\r\n        <h2 className=\"centered prim-btn-2\">{`Go back to ${props.name}`}</h2>\r\n      </Link>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React, {useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Logout = () => {\r\n  const {setIsAuthenticated, CSRF} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n\tconst handleLogout = () => {\r\n    const url = '/api/auth/logout/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin'\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {     \r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n      })\r\n      .catch(error => alert(error))\r\n\t}\r\n\r\n  return (\r\n    <h3 onClick={() => handleLogout()} className=\"nav-btn cursor clicked\">Logout</h3> \r\n  )\r\n}\r\n\r\n\r\nexport default Logout\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\nimport Logout from './Logout'\r\n\r\n\r\nconst Navbar = () => {\r\n  const [userName, setUserName] = useState('')\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n  const [isAuthenticatedState, setIsAuthenticatedState] = useState(false)\r\n \r\n  useEffect(() => {\r\n    setIsAuthenticatedState(isAuthenticated)\r\n\r\n    if(isAuthenticatedState) {\r\n      const url = '/api/profiles/current/user/'\r\n      const request = {\r\n        method: 'GET',\r\n        headers: {\r\n          'accepts': 'application/json',\r\n        },\r\n        credentials: 'same-origin',\r\n      }\r\n     \r\n      fetch(url, request)\r\n        .then(response => {\r\n          if(response.status === 200) {\r\n            return response.json()\r\n          }\r\n\r\n          else {\r\n            throw new Error(response.statusText)\r\n          } \r\n        })\r\n        .then(data => {\r\n          setUserName(data.username)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }, [isAuthenticated, isAuthenticatedState])\r\n \r\n  return (\r\n    <header id=\"main-header\">\r\n      <div className=\"container flexed\">\r\n        <Link to='/'><h1>TwitterClone</h1></Link>\r\n        <nav className=\"nav-bar flexed\">\r\n          {isAuthenticated && \r\n            <NavLink to='/home' activeClassName=\"active\" >\r\n              <h3 className=\"nav-btn\">Home</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && \r\n            <NavLink to={`/profiles/${userName}`} activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Profile</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && \r\n            <NavLink to=\"/profiles/search\" activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Search</h3>\r\n            </NavLink>\r\n          }\r\n          {!isAuthenticated && \r\n            <NavLink to='/auth/login' activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Login</h3>\r\n            </NavLink>\r\n          }\r\n          {!isAuthenticated && \r\n            <NavLink to='/auth/register' activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Register</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && <Logout />}  \r\n        </nav>     \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, {useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Login = () => {\r\n  const {setIsAuthenticated, CSRF} = useContext(AuthContext)\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n\r\n  const clearFields = () => {\r\n    setUserName('')\r\n    setPassword('')\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    }\r\n    \r\n    const url = '/api/auth/login/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if(response.status === 200) {     \r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error('Try again')\r\n        }\r\n\r\n      })\r\n      .then((data) => {\r\n        setIsAuthenticated(true)\r\n        history.push('/home')\r\n      })\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n  return ( \r\n    <form onSubmit={e => handleLogin(e)} action=\"\" method=\"POST\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <h1 className=\"main-color\">Log In</h1>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_username\">Username</label>\r\n        <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)} required={true} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_password\">Password</label>\r\n        <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Log In\" className=\"prim-btn cursor\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Login","import React, {Fragment, useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Register = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [username, setUserName] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const history = useHistory()\r\n\r\n  const clearFields = () => {\r\n    setUserName('')\r\n    setName('')\r\n    setPassword('')\r\n    setPassword2('')\r\n    setEmail('')\r\n  }\r\n  \r\n  const handleRegister = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      name: name,\r\n      password: password,\r\n      password2: password2,\r\n      email: email,\r\n    }\r\n  \r\n    const url = '/api/auth/register/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if(response.status === 201) {     \r\n          history.push('/auth/login')\r\n        }\r\n\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data) {\r\n          throw new Error(data[Object.keys(data)[0]])\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleRegister(e)} method=\"POST\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1 className=\"main-color\">Register</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_name\">Name</label>\r\n          <input type=\"text\" name=\"name\" id=\"id_name\" value={name} onChange={e => setName(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">Password</label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password2\">Confirm Password</label>\r\n          <input type=\"password\" name=\"password2\" id=\"id_password2\" value={password2} onChange={e => setPassword2(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_email\">Email</label>\r\n          <input type=\"email\" name=\"email\" id=\"id_email\" value={email} onChange={e => setEmail(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Register\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <div className=\"centered\">\r\n        <p>Already a user? <Link to=\"/auth/login\" className=\"main-color\">Login</Link></p>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default Register","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Base.css'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport AuthenticatedRoute from './../utilities/AuthenticatedRoute'\r\nimport {PageNotFound} from './../handlers'\r\n\r\n\r\nconst Base = () => {\r\n  return (\r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <AuthenticatedRoute exact path='/auth/login'>\r\n          <Login />\r\n        </AuthenticatedRoute>\r\n        <AuthenticatedRoute exact path='/auth/register'>\r\n          <Register />    \r\n        </AuthenticatedRoute>\r\n        <Route>\r\n          <PageNotFound name=\"Landing Page\" to=\"/\" />\r\n        </Route>\r\n      </Switch>  \r\n    </main>  \r\n  )\r\n}\r\n\r\n\r\nexport default Base","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <main id=\"welcome\">\r\n      <div id=\"join-us\">     \r\n        <Link to='/auth/register'><h1 >Join Us</h1></Link>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Landing","import React, {useState, useContext, useEffect, useRef} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst TweetCreate = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [content, setContent] = useState('')\r\n  const tweetBtn = useRef(null)\r\n  const tweetCounter = useRef(null)\r\n \r\n  useEffect(() => {\r\n    if (content.length > 240) {\r\n      tweetBtn.current.disabled = true\r\n      tweetCounter.current.style.color = 'red'\r\n    }\r\n\r\n    else {\r\n      tweetBtn.current.disabled = false\r\n      tweetCounter.current.style.color = 'inherit'\r\n    }\r\n  }, [content])\r\n \r\n  const handleContent = (event) => {\r\n    setContent(event.target.value)\r\n  }\r\n\r\n  const handleTweet = (event) => {\r\n    event.preventDefault()\r\n  \r\n    const data = {\r\n      content: content\r\n    }\r\n   \r\n    const url = '/api/tweets/create/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {  \r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {   \r\n        if (response.status === 201) {\r\n          setContent('')\r\n          props.onTweetAdd()\r\n        }\r\n\r\n        if (response.status === 400) {\r\n         \r\n        }   \r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n \r\n  return (\r\n    <form onSubmit={(e) => handleTweet(e)} method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <textarea \r\n          name=\"content\" \r\n          id=\"id_content\" \r\n          cols=\"60\" \r\n          rows=\"10\" \r\n          placeholder=\"Your tweet...\" \r\n          required={true} \r\n          value={content} \r\n          onChange={(e) => handleContent(e)}\r\n          autoComplete=\"off\">\r\n        </textarea>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <h6 ref={tweetCounter}>{content.length} / 240</h6>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <button ref={tweetBtn} type=\"submit\" className=\"prim-btn cursor\">\r\n          Tweet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default TweetCreate","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\nconst LikeBtn = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [likes, setLikes] = useState(props.tweetLikes)\r\n  const [isLiked, setIsLiked] = useState(props.isLiked)\r\n  const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    const handleLike = (tweetId) => {\r\n      setIsLoaded(false)\r\n\r\n      const url = `/api/tweets/${tweetId}/like/`\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          'Accept': 'application/json',\r\n          'X-CSRFToken': CSRF\r\n        },\r\n        credentials: 'same-origin',  \r\n      }\r\n\r\n      fetch(url, request)\r\n        .then(response => {\r\n          if(response.status === 200) {\r\n            setIsLiked(!isLiked)\r\n            isLiked? setLikes(likes - 1): setLikes(likes + 1) \r\n            setIsLoaded(true)\r\n          }\r\n\r\n          else {\r\n            throw new Error('Something Wrong Happend!')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n    }\r\n\r\n  return (\r\n    <button onDoubleClick={() => handleLike(props.tweetId)} onClick={() => handleLike(props.tweetId)} className=\"prim-btn tweet-container-item cursor\">\r\n      {!isLoaded && <div className=\"btn-loader prim-btn\"></div>}\r\n      {isLoaded && !isLiked && likes + ' likes'} \r\n      {isLoaded && isLiked && likes + ' liked'} \r\n    </button>  \r\n  )\r\n}\r\n\r\n\r\nexport default LikeBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst RetweetBtn = (props) => {\r\n  return (\r\n    <Link to={{\r\n      pathname: '/home/retweet',\r\n      state: {\r\n        tweet: props.tweet\r\n      }\r\n    }}>\r\n      <button className=\"prim-btn tweet-container-item cursor\">\r\n        retweet\r\n      </button>\r\n    </Link>\r\n  )\r\n}\r\n\r\n\r\nexport default RetweetBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Retweet = (props) => {\r\n  return ( \r\n    <article key={props.tweet.id} className=\"retweet-container\">\r\n      <header className=\"tweet-header\">\r\n        <div id=\"tweet-profile-pic\">\r\n          <img src={`${props.tweet.profile_pic}`} alt=\"\"/>\r\n        </div>\r\n        <Link to={`/profiles/${props.tweet.username}`}><h3 className=\"tweet-container-item\">{props.tweet.username}</h3></Link>\r\n      </header>\r\n      <p className=\"tweet-container-item\">\r\n        {props.tweet.content}\r\n      </p>\r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Retweet","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport LikeBtn from './LikeBtn'\r\nimport Retweetbtn from './RetweetBtn'\r\nimport Retweet from './Retweet'\r\n\r\n\r\nconst Tweet = (props) => {\r\n  return ( \r\n    <article key={props.tweet.id} className=\"tweet-container\">\r\n      <header className=\"tweet-header\">\r\n        <div id=\"tweet-profile-pic\">\r\n          <img src={`${props.tweet.profile_pic}`} alt=\"\"/>\r\n        </div>\r\n        <Link to={`/profiles/${props.tweet.username}`}>\r\n          <h3 className=\"tweet-container-item\">{props.tweet.username}</h3>\r\n        </Link>\r\n      </header>\r\n      <p className=\"tweet-container-item\">\r\n        {props.tweet.content}\r\n      </p>\r\n      {props.tweet.is_retweet && <Retweet tweet={props.tweet.retweet} />}\r\n      <LikeBtn \r\n        tweetId={props.tweet.id} \r\n        tweetLikes={props.tweet.likes} \r\n        isLiked={props.tweet.isLiked} \r\n      />\r\n      <Retweetbtn tweet={props.tweet} onTweetAdd={props.onTweetAdd} />     \r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Tweet","import React, {Fragment, useState, useContext} from 'react'\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport Retweet from './Retweet'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst RetweetCreate = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [content, setContent] = useState('')\r\n \r\n  const handleRetweet = (event) => {\r\n    event.preventDefault()\r\n    \r\n    const url = `/api/tweets/${location.state.tweet.id}/retweet/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({content: content})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if (response.status === 201) {\r\n          history.push('/home')\r\n          props.onTweetAdd()\r\n          return \r\n        }\r\n\r\n        else {\r\n          throw new Error('Something wrong happend!')\r\n        }\r\n\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={(e) => handleRetweet(e)} method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <textarea \r\n            name=\"content\" \r\n            id=\"id_content\" cols=\"50\" \r\n            rows=\"7\" \r\n            placeholder=\"Add a comment\" \r\n            required={true} \r\n            value={content} \r\n            onChange={e => setContent(e.target.value)}\r\n            autoComplete=\"off\">\r\n          </textarea>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <button type=\"submit\" className=\"prim-btn cursor\">Retweet</button>\r\n        </div>\r\n      </form>\r\n      <Retweet tweet={location.state.tweet} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RetweetCreate\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Tweets.css'\r\nimport TweetCreate from './TweetCreate'\r\nimport Tweet from './Tweet'\r\nimport RetweetCreate from './RetweetCreate'\r\nimport {PageNotFound} from './../handlers'\r\n\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [isTweetAdded, setIsTweetAdded] = useState(false)\r\n \r\n  useEffect(() => {\r\n    const url = '/api/tweets/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin'\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error(response.statusText)\r\n        }    \r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setTweets(data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error);\r\n      })\r\n    }, [isTweetAdded])\r\n    \r\n    const onTweetAdd = () => {\r\n      setIsTweetAdded(!isTweetAdded)\r\n    }\r\n    \r\n  return ( \r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <Route exact path='/home'>\r\n          <TweetCreate onTweetAdd={onTweetAdd} />\r\n          {!isLoaded && <div className=\"loader\"></div>}\r\n          {error && <h1 className=\"message\">Error</h1>}\r\n          {!error && isLoaded &&\r\n            <section id=\"tweets-container\">    \r\n              {tweets.map((tweet) => (\r\n                <Tweet key={tweet.id} tweet={tweet} onTweetAdd={onTweetAdd} />\r\n              ))}\r\n            </section>\r\n          }\r\n        </Route>\r\n        <Route exact path='/home/retweet'>\r\n          <RetweetCreate onTweetAdd={onTweetAdd} />\r\n        </Route>\r\n        <Route>\r\n          <PageNotFound name=\"home\" to=\"/home\" />\r\n        </Route>\r\n      </Switch>\r\n    </main> \r\n  )\r\n}\r\n\r\n\r\nexport default Tweets","import React, {Fragment, useState, useEffect, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst FollowBtn = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [isFollowed, setIsFollowed] = useState(false)\r\n\r\n  useEffect(()=> {\r\n    setIsFollowed(props.isFollowed)\r\n  }, [props.isFollowed])\r\n\r\n  const handleFollow = () => {\r\n    const url = `/api/profiles/${props.username}/follow/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          props.onFollowersChange()\r\n          return response.json()\r\n        }\r\n\r\n        throw new Error()\r\n      })\r\n      .then(data => {\r\n        if(data.message === 'followed') {\r\n          setIsFollowed(true)\r\n        }\r\n\r\n        if(data.message === 'unfollowed') {\r\n          setIsFollowed(false)\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isFollowed && \r\n        <h3 onClick={handleFollow} className=\"prim-btn-2 cursor\">Unfollow</h3>\r\n      }\r\n      {!isFollowed && \r\n        <h3 onClick={handleFollow} className=\"prim-btn-2 cursor\">Follow</h3>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FollowBtn\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport FollowBtn from './FollowBtn'\r\nimport Tweet from './../tweets/Tweet'\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [profileData, setProfileData] = useState({})\r\n  const [tweetsData, setTweetsData] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [followersFlag, setFollowersFlag] = useState(false)\r\n  const {username} = useParams()\r\n\r\n  useEffect(() => {\r\n    const url = `/api/profiles/${username}/`\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 404) {\r\n          setUser(false)\r\n          throw new Error('User not found')\r\n        }\r\n\r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setUser(true)\r\n        setError(false)\r\n        setUserData(data.user_data)\r\n        setProfileData(data.profile_data)\r\n        setTweetsData(data.tweets_data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error)\r\n      })\r\n  }, [username, followersFlag])\r\n\r\n  const onFollowersChange = () => {\r\n    setFollowersFlag(!followersFlag)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoaded && <div className=\"loader\"></div>}\r\n      {isLoaded && !user && \r\n        <h1 className=\"centered\">User Not Found</h1>\r\n      }\r\n      {error && user && <h1 className=\"message\">Something wrog happend!</h1>}\r\n      {!error && isLoaded &&\r\n        <Fragment>\r\n          <section id=\"profile-info\">\r\n            <header id=\"profile-header\" className=\"flexed\">\r\n              <div id=\"profile-pic\">\r\n                <img src={`${profileData.profile_pic}`} alt=\"Not Found\"/>\r\n              </div>\r\n              <h1>{profileData.tweets_count} Tweets</h1>\r\n              {userData.is_current_user && \r\n                <Link to=\"/settings\">\r\n                  <h3 className=\"prim-btn-2\">Edit Profile</h3>\r\n                </Link>  \r\n              }\r\n              {!userData.is_current_user && \r\n                <FollowBtn\r\n                  isFollowed={userData.is_followed} \r\n                  username={userData.username}\r\n                  onFollowersChange={onFollowersChange}>\r\n                </FollowBtn>\r\n              }\r\n            </header>\r\n            <h1 className=\"bolder\">{profileData.name}</h1>\r\n            <p className=\"light-text-color\">@{userData.username}</p> \r\n            <p>{profileData.bio}</p> \r\n            <p className=\"light-text-color \">Joined {userData.date_joined}</p>\r\n            {profileData.birthday &&\r\n              <p className=\"light-text-color \">Born {profileData.birthday}</p>\r\n            }\r\n            <p className=\"light-text-color\">\r\n              <span className=\"bold\"> {profileData.following_count} </span>\r\n                <Link to={`/profiles/${userData.username}/following`}>\r\n                  Following\r\n                </Link>\r\n              <span className=\"bold\"> {profileData.followers_count} </span>\r\n              <Link to={`/profiles/${userData.username}/followers`}>\r\n                Followers\r\n              </Link>\r\n            </p>\r\n          </section>\r\n          <section id=\"tweets-container\">    \r\n            {tweetsData.map((tweet) => (\r\n              <Tweet key={tweet.id} tweet={tweet} />\r\n            ))}\r\n          </section>\r\n        </Fragment>\r\n      }\r\n    </Fragment>  \r\n  )\r\n}\r\n\r\n\r\nexport default Profile","import React, {Fragment, useEffect, useState, useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst SearchProfiles = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [user, setUsers] = useState([])\r\n  const [username, setUsername] = useState('')\r\n\r\n  useEffect(() => {\r\n    const url = '/api/profiles/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n        \r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({'username': username}),\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        throw new Error()\r\n      })\r\n      .then(data => {\r\n        setUsers(data || [])\r\n      })\r\n      .catch(error => console.log(error))\r\n  }, [username, CSRF])\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      <header className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1 className=\"main-color\">Search Users</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"username\" \r\n            id=\"id_username\" required={true} \r\n            autoComplete=\"off\" \r\n            onChange={e => {setUsername(e.target.value)}}\r\n          />\r\n        </div>\r\n        <div></div>\r\n      </header>\r\n      <section id=\"users-list\">\r\n        {user.map((user) => (\r\n          <Link key={user.id} to={`/profiles/${user.username}`}>\r\n            <h2>{user.username}</h2>\r\n          </Link>\r\n        ))}\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchProfiles\r\n","import React, {Fragment, useEffect, useState} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\n\r\n\r\nconst FollowList = (props) => {\r\n  const [followList, setFollowList] = useState([])  \r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const {username} = useParams()\r\n\r\n  useEffect(() => {\r\n    const url = `/api/profiles/${username}/${props.followType}/`\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setFollowList(data.follow_list)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n      })\r\n    \r\n    \r\n  }, [username, props.followType])\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoaded && <div className=\"loader\"></div>}\r\n      {error && <h1 className=\"message\">Something wrog happend!</h1>}\r\n      {!error && isLoaded &&\r\n        <section id=\"users-list\">\r\n        {followList.map((profile) => (\r\n          <Link key={profile} to={`/profiles/${profile}`}>\r\n            <h2>{profile}</h2>\r\n          </Link>\r\n        ))}\r\n      </section>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FollowList\r\n","import React from 'react'\r\nimport './Profiles.css'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport {Profile, SearchProfiles, FollowList} from '.'\r\nimport {PageNotFound} from './../handlers'\r\n\r\nconst Profiles = () => {\r\n  return ( \r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <Route exact path='/profiles/search'>\r\n          <SearchProfiles />\r\n        </Route>\r\n        <Route exact path='/profiles/:username'>\r\n          <Profile />\r\n        </Route>\r\n        <Route exact path='/profiles/:username/following'>\r\n          <FollowList followType='following' />\r\n        </Route>\r\n        <Route exact path='/profiles/:username/followers'>\r\n          <FollowList followType='followers' />\r\n        </Route>\r\n        <Route>\r\n          <PageNotFound name=\"home\" to=\"/home\" />\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profiles\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst ProfileSettings = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [bio, setBio] = useState('')\r\n  const [birthday, setBirthday] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [profilePic, setProfilePic] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const url = '/api/settings/update/profile/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        setBio(data.bio || '')\r\n        setBirthday(data.birthday || '')\r\n        setName(data.name)\r\n        setProfilePic(null)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n    let data = new FormData()\r\n\r\n    data.append('bio', bio)\r\n    data.append('birthday', birthday)\r\n    data.append('name', name)\r\n    \r\n    if(profilePic) {\r\n      data.append('profile_pic', profilePic, profilePic.name)\r\n    }\r\n\r\n    const url = '/api/settings/update/profile/'\r\n    const request = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: data\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n         alert('updated')\r\n        }\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} className=\"form-container\" method=\"put\" encType=\"multipart/form-data\">\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_name\">Name</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          id=\"id_name\" \r\n          value={name} \r\n          onChange={e => setName(e.target.value)} \r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_bio\">Bio</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"bio\" \r\n          id=\"id_bio\" \r\n          value={bio} \r\n          onChange={e => setBio(e.target.value)} \r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"\">Birthday</label>\r\n        <input \r\n          type=\"date\" \r\n          name=\"birthday\" \r\n          id=\"id_birthday\" \r\n          value={birthday} \r\n          onChange={e => setBirthday(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_image\">Profile Picture:</label> \r\n        <div className=\"fileUpload prim-btn-2\">\r\n          <span>Upload</span> \r\n          <input \r\n            type=\"file\" \r\n            name=\"profile_pic\" \r\n            id=\"id_profile_pic\" \r\n            className=\"upload\" \r\n            accept=\"image/*\" \r\n            onChange={e => setProfilePic(e.target.files[0])}\r\n          /> \r\n        </div>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input \r\n          type=\"submit\" \r\n          value=\"Update\" \r\n          className=\"prim-btn cursor text-color\"\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProfileSettings\r\n","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst PasswordSettings = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPassword2, setNewPassword2] = useState('')\r\n\r\n  const clearFields = () => {\r\n    setOldPassword('')\r\n    setNewPassword('')\r\n    setNewPassword2('')\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      old_password: oldPassword,\r\n      new_password: newPassword,\r\n      new_password2: newPassword2\r\n    }\r\n\r\n    const url = '/api/settings/update/password/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n\r\n        if([200, 400, 401].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.success) {\r\n          alert(data.success)\r\n        }\r\n\r\n        if(data.failure) {\r\n          alert(data.failure)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\">  \r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">Old Password</label>\r\n        <input type=\"password\" name=\"old_password\" id=\"id_old_password\" value={oldPassword} onChange={e => setOldPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">New Password</label>\r\n        <input type=\"password\" name=\"new_password\" id=\"id_new_password\" value={newPassword} onChange={e => setNewPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">Confirm New Password</label>\r\n        <input type=\"password\" name=\"new_password2\" id=\"id_new_password2\" value={newPassword2} onChange={e => setNewPassword2(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PasswordSettings\r\n","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst EmailSettings = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  \r\n  const clearFields = () => {\r\n    setPassword('')\r\n    setEmail('')\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      password: password,\r\n      email: email,\r\n    }\r\n\r\n    const url = '/api/settings/update/email/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if ([200, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.success) {\r\n          alert(data.success)\r\n        }\r\n\r\n        if(data.failure) {\r\n          alert(data.failure)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\">  \r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_password\">Confirm Password</label>\r\n        <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_email\">New Email</label>\r\n        <input type=\"email\" name=\"email\" id=\"id_email\" value={email} onChange={e => setEmail(e.target.value)} required={true} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EmailSettings\r\n","import React, {Fragment, useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst LogoutallSettings = () => {\r\n  const [password, setPassword] = useState('')\r\n  const {setIsAuthenticated, CSRF} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n  const handleConfirm = (event) => {\r\n    event.preventDefault()\r\n\r\n    const url = '/api/auth/confirmpassword/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({password: password})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        setPassword('')\r\n\r\n        if([200, 401, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.message) {\r\n          alert(data.message)\r\n        }\r\n\r\n        if(data.success) {\r\n          document.getElementById('confirm-delete').style.display = 'block'\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const handleDelete = (event) => {\r\n    const url = '/api/settings/delete/profile/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n      })  \r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleConfirm(e)} action=\"POST\" className=\"form-container\">  \r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">\r\n            Confirm Password To Delete Account\r\n          </label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Confirm\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <h2 id=\"confirm-delete\" className=\"centered cursor\" onClick={e => handleDelete(e)}>Delete Account</h2>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LogoutallSettings","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Icon.css'\r\n\r\nconst BackIcon = (props) => {\r\n  return (\r\n    <Link to={props.to}>\r\n      <div id=\"back\"> \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M20 11H6.83l2.88-2.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L3.71 11.3c-.39.39-.39 1.02 0 1.41L8.3 17.3c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L6.83 13H20c.55 0 1-.45 1-1s-.45-1-1-1z\"/>\r\n        </svg>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default BackIcon","import React from 'react'\r\nimport {Switch, Route, Link} from 'react-router-dom'\r\nimport './Settings.css'\r\nimport {\r\n  ProfileSettings, \r\n  PasswordSettings, \r\n  DeleteAccount, \r\n  EmailSettings\r\n} from './'\r\nimport BackIcon from './../icons/BackIcon'\r\nimport {PageNotFound} from './../handlers'\r\n\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <main id=\"page-container\" className=\"container\">\r\n      <Switch>\r\n        <Route exact path='/settings'>\r\n          <header id=\"settings-list\"> \r\n            <Link to='/settings/profile'><h2>Profile</h2></Link>\r\n            <Link to='/settings/password'><h2 >Password</h2></Link>\r\n            <Link to='/settings/email'><h2 >Email</h2></Link>\r\n            <Link to='/settings/delete/profile'><h2 >Delete Account</h2></Link>\r\n          </header>\r\n        </Route>\r\n        <Route exact path='/settings/profile'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Profile</h1>\r\n          </div>\r\n          <ProfileSettings />\r\n        </Route>\r\n        <Route exact path='/settings/password'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Password</h1>\r\n          </div>\r\n          <PasswordSettings />\r\n        </Route>\r\n        <Route exact path='/settings/email'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Email</h1>\r\n          </div>\r\n          <EmailSettings />\r\n        </Route>\r\n        <Route exact path='/settings/delete/profile'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Delete Acccount</h1>\r\n          </div>\r\n          <DeleteAccount />\r\n        </Route>\r\n        <Route>\r\n          <PageNotFound name=\"settings\" to=\"/settings\" />\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, {Fragment, useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport './baseCSS/index'\r\nimport {AuthContext, PrivateRoute, getCookie} from './utilities'\r\nimport {PageNotFound} from './handlers'\r\nimport {Navbar, Base, Landing} from './base'\r\nimport Tweets from './tweets/Tweets'\r\nimport Profiles from './profiles/Profiles'\r\nimport Settings from './settings/Settings'\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  const [CSRF, setCSRF] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    const url = '/api/auth/authenticated/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          setIsAuthenticated(true)\r\n          setCSRF(getCookie('csrftoken'))\r\n        }\r\n\r\n        setIsLoaded(true)     \r\n      })\r\n  }, [CSRF, isAuthenticated])\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoaded && <div className=\"loader\"></div>}\r\n      {isLoaded &&\r\n        <AuthContext.Provider value={{\r\n          isAuthenticated,\r\n          setIsAuthenticated,\r\n          CSRF\r\n        }}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <Landing />\r\n              </Route> \r\n              <Route path='/auth'>\r\n                <Navbar />\r\n                <Base /> \r\n              </Route> \r\n              <PrivateRoute path='/home'>\r\n                <Navbar />\r\n                <Tweets /> \r\n              </PrivateRoute>\r\n              <PrivateRoute path='/profiles'>\r\n                <Navbar />\r\n                <Profiles />     \r\n              </PrivateRoute>\r\n              <PrivateRoute path='/settings'>\r\n                <Navbar />\r\n                <Settings /> \r\n              </PrivateRoute>\r\n              <Route>\r\n                <PageNotFound name=\"Landing Page\" to=\"/\" />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </AuthContext.Provider>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}