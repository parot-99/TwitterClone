{"version":3,"sources":["utilities/AuthContext.js","utilities/PrivateRoute.js","utilities/getCookie.js","base/Logout.js","base/Navbar.js","tweets/TweetCreate.js","tweets/LikeBtn.js","tweets/RetweetBtn.js","tweets/Retweet.js","tweets/Tweet.js","tweets/RetweetCreate.js","tweets/Tweets.js","base/Login.js","base/Register.js","utilities/AuthenticatedRoute.js","base/Base.js","base/Landing.js","profiles/FollowBtn.js","profiles/Profile.js","profiles/SearchProfiles.js","profiles/Profiles.js","settings/ProfileSettings.js","settings/PasswordSettings.js","settings/EmailSettings.js","settings/DeleteAccount.js","icons/BackIcon.js","settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","isAuthenticated","setIsAuthenticated","CSRF","PrivateRoute","children","rest","useContext","render","location","to","pathname","state","from","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Logout","history","useHistory","onClick","fetch","method","headers","credentials","then","response","status","push","catch","error","alert","className","Navbar","useState","userName","setUserName","isAuthenticatedState","setIsAuthenticatedState","useEffect","json","Error","statusText","data","username","console","log","id","activeClassName","TweetCreate","props","content","setContent","onSubmit","e","event","preventDefault","request","body","JSON","stringify","onTweetAdd","handleTweet","action","cols","rows","placeholder","required","value","onChange","target","autoComplete","type","LikeBtn","tweetLikes","likes","setLikes","isLiked","setIsLiked","tweetId","url","handleLike","RetweetBtn","tweet","Retweet","key","src","profile_pic","alt","Tweet","is_retweet","retweet","RetweetCreate","useLocation","handleRetweet","Tweets","tweets","setTweets","setError","isLoaded","setIsLoaded","isTweetAdded","setIsTweetAdded","exact","path","map","Login","password","setPassword","handleLogin","htmlFor","Register","setName","password2","setPassword2","email","setEmail","handleRegister","Object","keys","AuthenticatedRoute","Base","Landing","FollowBtn","isFollowed","setIsFollowed","handleFollow","onFollowersChange","message","Profile","user","setUser","userData","setUserData","profileData","setProfileData","tweetsData","setTweetsData","followersFlag","setFollowersFlag","useParams","user_data","profile_data","tweets_data","tweets_count","is_current_user","is_followed","bio","date_joined","birthday","following_count","followers_count","SearchProfiles","setUsers","setUsername","Profiles","ProfileSettings","setBio","setBirthday","profilePic","setProfilePic","formData","FormData","append","handleUpdate","encType","accept","files","PasswordSettings","oldPassword","setOldPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","old_password","new_password","new_password2","EmailSettings","includes","success","LogoutallSettings","Authorization","localStorage","getItem","getElementById","style","display","handleConfirm","removeItem","handleDelete","BackIcon","xmlns","width","height","viewBox","d","Settings","DeleteAccount","App","setCSRF","Provider","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6ec4b29.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AuthContext = React.createContext({\r\n  isAuthenticated: false,\r\n  setIsAuthenticated: () => {},\r\n  CSRF: null \r\n})\r\n\r\nexport default AuthContext","import React, {useContext} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthContext from './AuthContext'\r\n\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/auth/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","const getCookie = (name) => {\r\n  let cookieValue = null\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';')\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport default getCookie","import React, {useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Logout = () => {\r\n  const {setIsAuthenticated, CSRF} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n\tconst handleLogout = () => {\r\n    const url = '/api/auth/logout/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin'\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {     \r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n      })\r\n      .catch(error => alert(error))\r\n\t}\r\n\r\n  return (\r\n    <h3 onClick={() => handleLogout()} className=\"nav-btn cursor clicked\">Logout</h3> \r\n  )\r\n}\r\n\r\n\r\nexport default Logout\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\nimport Logout from './Logout'\r\n\r\n\r\nconst Navbar = () => {\r\n  const [userName, setUserName] = useState('')\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n  const [isAuthenticatedState, setIsAuthenticatedState] = useState(false)\r\n \r\n  useEffect(() => {\r\n    setIsAuthenticatedState(isAuthenticated)\r\n\r\n    if(isAuthenticatedState) {\r\n      const url = '/api/profiles/current/user/'\r\n      const request = {\r\n        method: 'GET',\r\n        headers: {\r\n          'accepts': 'application/json',\r\n        },\r\n        credentials: 'same-origin',\r\n      }\r\n     \r\n      fetch(url, request)\r\n        .then(response => {\r\n          if(response.status === 200) {\r\n            return response.json()\r\n          }\r\n\r\n          else {\r\n            throw new Error(response.statusText)\r\n          } \r\n        })\r\n        .then(data => {\r\n          setUserName(data.username)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }, [isAuthenticated, isAuthenticatedState])\r\n \r\n  return (\r\n    <header id=\"main-header\">\r\n      <div className=\"container flexed\">\r\n        <Link to='/'><h1>TwitterClone</h1></Link>\r\n        <nav className=\"nav-bar flexed\">\r\n          {isAuthenticated && \r\n            <NavLink to='/home' activeClassName=\"active\" >\r\n              <h3 className=\"nav-btn\">Home</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && \r\n            <NavLink to={`/profiles/${userName}`} activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Profile</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && \r\n            <NavLink to=\"/profiles/search\" activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Search</h3>\r\n            </NavLink>\r\n          }\r\n          {!isAuthenticated && \r\n            <NavLink to='/auth/login' activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Login</h3>\r\n            </NavLink>\r\n          }\r\n          {!isAuthenticated && \r\n            <NavLink to='/auth/register' activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Register</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && <Logout />}  \r\n        </nav>     \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst TweetCreate = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [content, setContent] = useState('')\r\n  \r\n  const handleTweet = (event) => {\r\n    event.preventDefault()\r\n   \r\n    const data = {\r\n      content: content\r\n    }\r\n   \r\n    const url = '/api/tweets/create/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {  \r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {   \r\n        if(response.status === 201) {\r\n          props.onTweetAdd()\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 400) {\r\n          throw new Error('Try a shorter tweet')\r\n        }\r\n\r\n        if(response.status === 401) {\r\n          throw new Error('Login first to perform this action')\r\n        }      \r\n        \r\n        else {\r\n          throw new Error('Something wrong happend!')\r\n        }\r\n        \r\n      })\r\n      .then(() => {\r\n        setContent('') \r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n \r\n  return (\r\n    <form onSubmit={(e) => handleTweet(e)} action=\"\" method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <textarea \r\n          name=\"content\" \r\n          id=\"id_content\" cols=\"50\" \r\n          rows=\"7\" \r\n          placeholder=\"Your tweet...\" \r\n          required={true} \r\n          value={content} \r\n          onChange={e => setContent(e.target.value)}\r\n          autoComplete=\"off\">\r\n        </textarea>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <button type=\"submit\" className=\"prim-btn cursor\">Tweet</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default TweetCreate","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\nconst LikeBtn = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [likes, setLikes] = useState(props.tweetLikes)\r\n  const [isLiked, setIsLiked] = useState(props.isLiked)\r\n\r\n    const handleLike = (tweetId) => {\r\n      const url = `/api/tweets/${tweetId}/like/`\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          'Accept': 'application/json',\r\n          'X-CSRFToken': CSRF\r\n        },\r\n        credentials: 'same-origin',  \r\n      }\r\n\r\n      fetch(url, request)\r\n        .then(response => {\r\n          if(response.status === 200) {\r\n            return response.json()\r\n          }\r\n\r\n          else {\r\n            throw new Error()\r\n          }\r\n        })\r\n        .then((data) => {\r\n          data.type==='like'? setLikes(likes+ 1): setLikes(likes- 1) \r\n          data.type==='like'? setIsLiked(true): setIsLiked(false) \r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n    }\r\n\r\n  return (\r\n    <button onClick={() => handleLike(props.tweetId)} className=\"prim-btn tweet-container-item cursor\">\r\n      {!isLiked && likes + ' likes'} \r\n      {isLiked && likes + ' liked'} \r\n    </button>\r\n  )\r\n}\r\n\r\n\r\nexport default LikeBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst RetweetBtn = (props) => {\r\n  return (\r\n    <Link to={{\r\n      pathname: '/home/retweet',\r\n      state: {\r\n        tweet: props.tweet\r\n      }\r\n    }}>\r\n      <button className=\"prim-btn tweet-container-item cursor\">\r\n        retweet\r\n      </button>\r\n    </Link>\r\n  )\r\n}\r\n\r\n\r\nexport default RetweetBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Retweet = (props) => {\r\n  return ( \r\n    <article key={props.tweet.id} className=\"retweet-container\">\r\n      <header className=\"tweet-header\">\r\n        <div id=\"tweet-profile-pic\">\r\n          <img src={`${props.tweet.profile_pic}`} alt=\"\"/>\r\n        </div>\r\n        <Link to={`/profiles/${props.tweet.username}`}><h3 className=\"tweet-container-item\">{props.tweet.username}</h3></Link>\r\n      </header>\r\n      <p className=\"tweet-container-item\">\r\n        {props.tweet.content}\r\n      </p>\r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Retweet","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport LikeBtn from './LikeBtn'\r\nimport Retweetbtn from './RetweetBtn'\r\nimport Retweet from './Retweet'\r\n\r\n\r\nconst Tweet = (props) => {\r\n  return ( \r\n    <article key={props.tweet.id} className=\"tweet-container\">\r\n      <header className=\"tweet-header\">\r\n        <div id=\"tweet-profile-pic\">\r\n          <img src={`${props.tweet.profile_pic}`} alt=\"\"/>\r\n        </div>\r\n        <Link to={`/profiles/${props.tweet.username}`}><h3 className=\"tweet-container-item\">{props.tweet.username}</h3></Link>\r\n      </header>\r\n      <p className=\"tweet-container-item\">\r\n        {props.tweet.content}\r\n      </p>\r\n      {props.tweet.is_retweet && <Retweet tweet={props.tweet.retweet} />}\r\n      <LikeBtn tweetId={props.tweet.id} tweetLikes={props.tweet.likes} isLiked={props.tweet.isLiked} />\r\n      <Retweetbtn tweet={props.tweet} onTweetAdd={props.onTweetAdd} />\r\n      \r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Tweet","import React, {Fragment, useState, useContext} from 'react'\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport Retweet from './Retweet'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst RetweetCreate = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [content, setContent] = useState('')\r\n \r\n  const handleRetweet = (event) => {\r\n    event.preventDefault()\r\n    \r\n    const url = `/api/tweets/${location.state.tweet.id}/retweet/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({content: content})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 201) {\r\n          history.push('/home')\r\n          return \r\n        }\r\n\r\n        else {\r\n          throw new Error('Something wrong happend!')\r\n        }\r\n\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={(e) => handleRetweet(e)} method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <textarea \r\n            name=\"content\" \r\n            id=\"id_content\" cols=\"50\" \r\n            rows=\"7\" \r\n            placeholder=\"Add a comment\" \r\n            required={true} \r\n            value={content} \r\n            onChange={e => setContent(e.target.value)}\r\n            autoComplete=\"off\">\r\n          </textarea>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <button type=\"submit\" className=\"prim-btn cursor\">Retweet</button>\r\n        </div>\r\n      </form>\r\n      <Retweet tweet={location.state.tweet} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RetweetCreate\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Tweets.css'\r\nimport TweetCreate from './TweetCreate'\r\nimport Tweet from './Tweet'\r\nimport RetweetCreate from './RetweetCreate'\r\n\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [isTweetAdded, setIsTweetAdded] = useState(false)\r\n \r\n  useEffect(() => {\r\n    const url = '/api/tweets/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin'\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then((response) => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error(response.statusText)\r\n        }    \r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setTweets(data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error);\r\n      })\r\n    }, [isTweetAdded])\r\n    \r\n    const onTweetAdd = () => {\r\n      setIsTweetAdded(!isTweetAdded)\r\n    }\r\n    \r\n  return ( \r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <Route exact path='/home'>\r\n          <TweetCreate onTweetAdd={onTweetAdd} />\r\n          {!isLoaded && <div className=\"loader\"></div>}\r\n          {error && <h1 className=\"message\">Error</h1>}\r\n          {!error && \r\n            <section id=\"tweets-container\">    \r\n              {tweets.map((tweet) => (\r\n                <Tweet key={tweet.id} tweet={tweet} onTweetAdd={onTweetAdd} />\r\n                ))}\r\n            </section>\r\n          }\r\n        </Route>\r\n        <Route exact path='/home/retweet'>\r\n          <RetweetCreate />\r\n        </Route>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>\r\n    </main> \r\n  )\r\n}\r\n\r\n\r\nexport default Tweets","import React, {useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Login = () => {\r\n  const {setIsAuthenticated, CSRF} = useContext(AuthContext)\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n\r\n  const clearFields = () => {\r\n    setUserName('')\r\n    setPassword('')\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    }\r\n    \r\n    const url = '/api/auth/login/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if(response.status === 200) {     \r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error('Try again')\r\n        }\r\n\r\n      })\r\n      .then((data) => {\r\n        setIsAuthenticated(true)\r\n        history.push('/home')\r\n      })\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n  return ( \r\n    <form onSubmit={e => handleLogin(e)} action=\"\" method=\"POST\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <h1 className=\"main-color\">Log In</h1>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_username\">Username</label>\r\n        <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)} required={true} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_password\">Password</label>\r\n        <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Log In\" className=\"prim-btn cursor\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Login","import React, {Fragment, useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Register = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [username, setUserName] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const history = useHistory()\r\n\r\n  const clearFields = () => {\r\n    setUserName('')\r\n    setName('')\r\n    setPassword('')\r\n    setPassword2('')\r\n    setEmail('')\r\n  }\r\n  \r\n  const handleRegister = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      name: name,\r\n      password: password,\r\n      password2: password2,\r\n      email: email,\r\n    }\r\n  \r\n    const url = '/api/auth/register/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if(response.status === 201) {     \r\n          history.push('/auth/login')\r\n        }\r\n\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data) {\r\n          throw new Error(data[Object.keys(data)[0]])\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleRegister(e)} method=\"POST\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1 className=\"main-color\">Register</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_name\">Name</label>\r\n          <input type=\"text\" name=\"name\" id=\"id_name\" value={name} onChange={e => setName(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">Password</label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password2\">Confirm Password</label>\r\n          <input type=\"password\" name=\"password2\" id=\"id_password2\" value={password2} onChange={e => setPassword2(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_email\">Email</label>\r\n          <input type=\"email\" name=\"email\" id=\"id_email\" value={email} onChange={e => setEmail(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Register\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <div className=\"centered\">\r\n        <p>Already a user? <Link to=\"/auth/login\" className=\"main-color\">Login</Link></p>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default Register","import React, {useContext} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthContext from './AuthContext'\r\n\r\n\r\nconst AuthenticatedRoute = ({children, ...rest}) => {\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      !isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/home',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Base.css'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport AuthenticatedRoute from './../utilities/AuthenticatedRoute'\r\n\r\n\r\nconst Base = () => {\r\n  return (\r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <AuthenticatedRoute exact path='/auth/login'>\r\n          <Login />\r\n        </AuthenticatedRoute>\r\n        <AuthenticatedRoute exact path='/auth/register'>\r\n          <Register />    \r\n        </AuthenticatedRoute>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>  \r\n    </main>  \r\n  )\r\n}\r\n\r\n\r\nexport default Base","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <main id=\"welcome\">\r\n      <div id=\"join-us\">     \r\n        <Link to='/auth/register'><h1 >Join Us</h1></Link>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Landing","import React, {Fragment, useState, useEffect, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst FollowBtn = (props) => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [isFollowed, setIsFollowed] = useState(false)\r\n\r\n  useEffect(()=> {\r\n    setIsFollowed(props.isFollowed)\r\n  }, [props.isFollowed])\r\n\r\n  const handleFollow = () => {\r\n    const url = `/api/profiles/${props.username}/follow/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          props.onFollowersChange()\r\n          return response.json()\r\n        }\r\n\r\n        throw new Error()\r\n      })\r\n      .then(data => {\r\n        if(data.message === 'followed') {\r\n          setIsFollowed(true)\r\n        }\r\n\r\n        if(data.message === 'unfollowed') {\r\n          setIsFollowed(false)\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isFollowed && \r\n        <h3 onClick={handleFollow} className=\"prim-btn-2 cursor\">Unfollow</h3>\r\n      }\r\n      {!isFollowed && \r\n        <h3 onClick={handleFollow} className=\"prim-btn-2 cursor\">Follow</h3>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FollowBtn\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport FollowBtn from './FollowBtn'\r\nimport Tweet from './../tweets/Tweet'\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [profileData, setProfileData] = useState({})\r\n  const [tweetsData, setTweetsData] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [followersFlag, setFollowersFlag] = useState(false)\r\n  const {username} = useParams()\r\n\r\n  useEffect(() => {\r\n    const url = `/api/profiles/${username}/`\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 404) {\r\n          setUser(false)\r\n          throw new Error('User not found')\r\n        }\r\n\r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setUser(true)\r\n        setError(false)\r\n        setUserData(data.user_data)\r\n        setProfileData(data.profile_data)\r\n        setTweetsData(data.tweets_data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error)\r\n      })\r\n  }, [username, followersFlag])\r\n\r\n  const onFollowersChange = () => {\r\n    setFollowersFlag(!followersFlag)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoaded && <div className=\"loader\"></div>}\r\n      {isLoaded && !user && \r\n        <h1 className=\"centered\">User Not Found</h1>\r\n      }\r\n      {error && user && <h1 className=\"message\">Something wrog happend!</h1>}\r\n      {!error && isLoaded &&\r\n        <Fragment>\r\n          <section id=\"profile-info\">\r\n            <header id=\"profile-header\" className=\"flexed\">\r\n              <div id=\"profile-pic\">\r\n                <img src={`${profileData.profile_pic}`} alt=\"\"/>\r\n              </div>\r\n              <h1>{profileData.tweets_count} Tweets</h1>\r\n              {userData.is_current_user && \r\n                <Link to=\"/settings\">\r\n                  <h3 className=\"prim-btn-2\">Edit Profile</h3>\r\n                </Link>  \r\n              }\r\n              {!userData.is_current_user && \r\n                <FollowBtn\r\n                  isFollowed={userData.is_followed} \r\n                  username={userData.username}\r\n                  onFollowersChange={onFollowersChange}>\r\n                </FollowBtn>\r\n              }\r\n            </header>\r\n            <h1 className=\"bolder\">{profileData.name}</h1>\r\n            <p className=\"light-text-color\">@{userData.username}</p> \r\n            <p>{profileData.bio}</p> \r\n            <p className=\"light-text-color \">Joined {userData.date_joined}</p>\r\n            {profileData.birthday &&\r\n              <p className=\"light-text-color \">Born {profileData.birthday}</p>\r\n            }\r\n            <p className=\"light-text-color\">\r\n          <span className=\"bolder\"> {profileData.following_count} </span> Following \r\n              <span className=\"bold\"> {profileData.followers_count} </span>Followers\r\n            </p>\r\n          </section>\r\n          <section id=\"tweets-container\">    \r\n            {tweetsData.map((tweet) => (\r\n              <Tweet key={tweet.id} tweet={tweet} />\r\n            ))}\r\n          </section>\r\n        </Fragment>\r\n      }\r\n    </Fragment>  \r\n  )\r\n}\r\n\r\n\r\nexport default Profile","import React, {Fragment, useEffect, useState, useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst SearchProfiles = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [user, setUsers] = useState([])\r\n  const [username, setUsername] = useState('')\r\n\r\n  useEffect(() => {\r\n    const url = '/api/profiles/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n        \r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({'username': username}),\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        throw new Error()\r\n      })\r\n      .then(data => {\r\n        setUsers(data || [])\r\n      })\r\n      .catch(error => console.log(error))\r\n  }, [username, CSRF])\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      <header className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1 className=\"main-color\">Search Users</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"id_username\" required={true} autoComplete=\"off\" onChange={e => {setUsername(e.target.value)}}/>\r\n        </div>\r\n        <div></div>\r\n      </header>\r\n      <section id=\"settings-list\">\r\n        {user.map((user) => (\r\n          <Link key={user.id} to={`/profiles/${user.username}`}><h2>{user.username}</h2></Link>\r\n        ))}\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchProfiles\r\n","import React from 'react'\r\nimport './Profiles.css'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport Profile from './Profile'\r\nimport SearchProfiles from './SearchProfiles'\r\n\r\nconst Profiles = () => {\r\n  return ( \r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <Route exact path='/profiles/search'>\r\n          <SearchProfiles />\r\n        </Route>\r\n        <Route exact path='/profiles/:username'>\r\n          <Profile />\r\n        </Route>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profiles\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst ProfileSettings = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [bio, setBio] = useState('')\r\n  const [birthday, setBirthday] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [profilePic, setProfilePic] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const url = '/api/settings/update/profile/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'same-origin',\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        setBio(data.bio || '')\r\n        setBirthday(data.birthday || '')\r\n        setName(data.name)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.append('bio', bio)\r\n    formData.append('birthday', birthday)\r\n    formData.append('name', name)\r\n\r\n    if(profilePic) {\r\n      formData.append('profile_pic', profilePic, profilePic.name)\r\n    }\r\n\r\n    const url = '/api/settings/update/profile/'\r\n    const request = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': CSRF\r\n      },\r\n      credentials: 'same-origin',\r\n      body: formData\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n         alert('updated')\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\" encType=\"multipart/form-data\">\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_name\">Name</label>\r\n        <input type=\"text\" name=\"name\" id=\"id_name\" value={name} onChange={e => setName(e.target.value)} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_bio\">Bio</label>\r\n        <input type=\"text\" name=\"bio\" id=\"id_bio\" value={bio} onChange={e => setBio(e.target.value)} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"\">Birthday</label>\r\n        <input type=\"date\" name=\"birthday\" id=\"id_birthday\" value={birthday} onChange={e => setBirthday(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_image\">Profile Picture:</label> \r\n        <div className=\"fileUpload prim-btn-2\">\r\n          <span>Upload</span> \r\n          <input type=\"file\" name=\"profile_pic\" id=\"id_profile_pic\" className=\"upload\" accept=\"image/*\" onChange={e => setProfilePic(e.target.files[0])}/> \r\n        </div>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProfileSettings\r\n","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst PasswordSettings = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPassword2, setNewPassword2] = useState('')\r\n\r\n  const clearFields = () => {\r\n    setOldPassword('')\r\n    setNewPassword('')\r\n    setNewPassword2('')\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      old_password: oldPassword,\r\n      new_password: newPassword,\r\n      new_password2: newPassword2\r\n    }\r\n\r\n    const url = '/api/settings/update/password/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 401) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 400) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        console.log(data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\">  \r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">Old Password</label>\r\n        <input type=\"password\" name=\"old_password\" id=\"id_old_password\" value={oldPassword} onChange={e => setOldPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">New Password</label>\r\n        <input type=\"password\" name=\"new_password\" id=\"id_new_password\" value={newPassword} onChange={e => setNewPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">Confirm New Password</label>\r\n        <input type=\"password\" name=\"new_password2\" id=\"id_new_password2\" value={newPassword2} onChange={e => setNewPassword2(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PasswordSettings\r\n","import React, {useState, useContext} from 'react'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst EmailSettings = () => {\r\n  const {CSRF} = useContext(AuthContext)\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  \r\n  const clearFields = () => {\r\n    setPassword('')\r\n    setEmail('')\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      password: password,\r\n      email: email,\r\n    }\r\n\r\n    const url = '/api/settings/update/email/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if([200, 401, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.message) {\r\n          alert(data.message)\r\n        }\r\n\r\n        if(data.success) {\r\n          alert(data.success)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\">  \r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_password\">Confirm Password</label>\r\n        <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_email\">New Email</label>\r\n        <input type=\"email\" name=\"email\" id=\"id_email\" value={email} onChange={e => setEmail(e.target.value)} required={true} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EmailSettings\r\n","import React, {Fragment, useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst LogoutallSettings = () => {\r\n  const [password, setPassword] = useState('')\r\n  const {setIsAuthenticated, CSRF} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n  const handleConfirm = (event) => {\r\n    event.preventDefault()\r\n\r\n    const url = '/api/auth/confirmpassword/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': CSRF,\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({password: password})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        setPassword('')\r\n\r\n        if([200, 401, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.message) {\r\n          alert(data.message)\r\n        }\r\n\r\n        if(data.success) {\r\n          document.getElementById('confirm-delete').style.display = 'block'\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const handleDelete = (event) => {\r\n    const url = '/api/settings/delete/profile/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          localStorage.removeItem('accessToken')\r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })  \r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleConfirm(e)} action=\"POST\" className=\"form-container\">  \r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">\r\n            Confirm Password To Delete Account\r\n          </label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Confirm\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <h2 id=\"confirm-delete\" className=\"centered cursor\" onClick={e => handleDelete(e)}>Delete Account</h2>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LogoutallSettings","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Icon.css'\r\n\r\nconst BackIcon = (props) => {\r\n  return (\r\n    <Link to={props.to}>\r\n      <div id=\"back\"> \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M20 11H6.83l2.88-2.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L3.71 11.3c-.39.39-.39 1.02 0 1.41L8.3 17.3c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L6.83 13H20c.55 0 1-.45 1-1s-.45-1-1-1z\"/>\r\n        </svg>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default BackIcon","import React from 'react'\r\nimport {Switch, Route, Link} from 'react-router-dom'\r\nimport './Settings.css'\r\nimport ProfileSettings from './ProfileSettings'\r\nimport PasswordSettings from './PasswordSettings'\r\nimport EmailSettings from './EmailSettings'\r\n// import LogoutallSettings from './LogoutallSettings'\r\nimport DeleteAccount from './DeleteAccount'\r\nimport BackIcon from './../icons/BackIcon'\r\n\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <main id=\"page-container\" className=\"container\">\r\n      <Switch>\r\n        <Route exact path='/settings'>\r\n          <header id=\"settings-list\"> \r\n            <Link to='/settings/profile'><h2>Profile</h2></Link>\r\n            <Link to='/settings/password'><h2 >Password</h2></Link>\r\n            <Link to='/settings/email'><h2 >Email</h2></Link>\r\n            {/* <Link to='/settings/logoutall'><h2 >Logout All Devices</h2></Link> */}\r\n            <Link to='/settings/delete/profile'><h2 >Delete Account</h2></Link>\r\n          </header>\r\n        </Route>\r\n        <Route exact path='/settings/profile'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Profile</h1>\r\n          </div>\r\n          <ProfileSettings />\r\n        </Route>\r\n        <Route exact path='/settings/password'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Password</h1>\r\n          </div>\r\n          <PasswordSettings />\r\n        </Route>\r\n        <Route exact path='/settings/email'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Email</h1>\r\n          </div>\r\n          <EmailSettings />\r\n        </Route>\r\n        {/* <Route exact path='/settings/logoutall'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Logout All Devices</h1>\r\n          </div>\r\n          <LogoutallSettings />\r\n        </Route> */}\r\n        <Route exact path='/settings/delete/profile'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Delete Acccount</h1>\r\n          </div>\r\n          <DeleteAccount />\r\n        </Route>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, {Fragment, useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport AuthContext from './utilities/AuthContext'\r\nimport PrivateRoute from './utilities/PrivateRoute'\r\nimport getCookie from './utilities/getCookie'\r\nimport './App.css'\r\nimport './Form.css'\r\nimport './variables.css'\r\nimport Navbar from './base/Navbar'\r\nimport Tweets from './tweets/Tweets'\r\nimport Base from './base/Base'\r\nimport Landing from './base/Landing'\r\nimport Profiles from './profiles/Profiles'\r\nimport Settings from './settings/Settings'\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  const [CSRF, setCSRF] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    setCSRF(getCookie('csrftoken'))\r\n    \r\n    const url = '/api/auth/authenticated/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          setIsAuthenticated(true)\r\n          setCSRF(getCookie('csrftoken'))\r\n        }\r\n\r\n        setIsLoaded(true)     \r\n      })\r\n  }, [CSRF, isAuthenticated])\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      {!isLoaded && <div className=\"loader\"></div>}\r\n      {isLoaded &&\r\n        <AuthContext.Provider value={{\r\n          isAuthenticated,\r\n          setIsAuthenticated,\r\n          CSRF\r\n        }}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <Landing />\r\n              </Route> \r\n              <Route path='/auth'>\r\n                <Navbar />  \r\n                <Base /> \r\n              </Route> \r\n              <PrivateRoute path='/home'>\r\n                <Navbar />  \r\n                <Tweets /> \r\n              </PrivateRoute>\r\n              <PrivateRoute path='/profiles'>\r\n                <Navbar />\r\n                <Profiles />     \r\n              </PrivateRoute>\r\n              <PrivateRoute path='/settings'>\r\n                <Navbar />  \r\n                <Settings /> \r\n              </PrivateRoute>\r\n              <Route>\r\n                <h1 className=\"centered\">Not Found</h1>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </AuthContext.Provider>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}