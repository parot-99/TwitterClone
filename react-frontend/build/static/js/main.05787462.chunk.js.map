{"version":3,"sources":["utilities/AuthContext.js","utilities/PrivateRoute.js","base/Logout.js","base/Navbar.js","tweets/TweetCreate.js","tweets/LikeBtn.js","tweets/RetweetBtn.js","tweets/Retweet.js","tweets/Tweet.js","tweets/RetweetCreate.js","tweets/Tweets.js","base/Login.js","base/Register.js","utilities/AuthenticatedRoute.js","base/Base.js","base/Landing.js","profiles/FollowBtn.js","profiles/Profile.js","profiles/SearchProfiles.js","profiles/Profiles.js","settings/ProfileSettings.js","settings/PasswordSettings.js","settings/EmailSettings.js","settings/LogoutallSettings.js","settings/DeleteAccount.js","icons/BackIcon.js","settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","isAuthenticated","setIsAuthenticated","PrivateRoute","children","rest","render","location","localStorage","getItem","to","pathname","state","from","Logout","useContext","history","useHistory","onClick","request","method","headers","Authorization","fetch","then","response","status","removeItem","push","catch","error","alert","handleLogout","className","Navbar","useState","userName","setUserName","isAuthenticatedState","setIsAuthenticatedState","useEffect","json","Error","statusText","data","username","console","log","id","activeClassName","TweetCreate","props","content","setContent","onSubmit","e","event","preventDefault","body","JSON","stringify","onTweetAdd","handleTweet","action","name","cols","rows","placeholder","required","value","onChange","target","autoComplete","type","LikeBtn","tweetLikes","likes","setLikes","isLiked","setIsLiked","tweetId","url","handleLike","RetweetBtn","tweet","Retweet","key","src","profile_pic","alt","Tweet","is_retweet","retweet","RetweetCreate","useLocation","handleRetweet","Tweets","tweets","setTweets","setError","isLoaded","setIsLoaded","isTweetAdded","setIsTweetAdded","exact","path","map","Login","password","setPassword","handleLogin","setItem","token","htmlFor","Register","setName","password2","setPassword2","email","setEmail","handleRegister","Object","keys","AuthenticatedRoute","Base","Landing","FollowBtn","isFollowed","setIsFollowed","handleFollow","message","Profile","user","setUser","userData","setUserData","profileData","setProfileData","tweetsData","setTweetsData","useParams","user_data","profile_data","tweets_data","tweets_count","is_current_user","is_followed","bio","date_joined","birthday","following_count","followers_count","SearchProfiles","setUsers","setUsername","Profiles","ProfileSettings","setBio","setBirthday","profilePic","setProfilePic","formData","FormData","append","handleUpdate","encType","accept","files","PasswordSettings","oldPassword","setOldPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","old_password","new_password","new_password2","EmailSettings","includes","success","LogoutallSettings","document","getElementById","style","display","handleConfirm","handleDelete","BackIcon","xmlns","width","height","viewBox","d","Settings","DeleteAccount","App","myToken","Provider","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05787462.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AuthContext = React.createContext({\r\n  isAuthenticated: false,\r\n  setIsAuthenticated: () => {}  \r\n})\r\n\r\nexport default AuthContext","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      localStorage.getItem('accessToken') ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/auth/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, {useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Logout = () => {\r\n  const {setIsAuthenticated} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n\tconst handleLogout = () => {\r\n    const url = '/api/auth/logout/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Token  ${localStorage.getItem('accessToken')}`\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 204) {     \r\n          localStorage.removeItem('accessToken')\r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n      })\r\n      .catch(error => alert(error))\r\n\t}\r\n\r\n  return (\r\n    <h3 onClick={() => handleLogout()} className=\"nav-btn cursor clicked\">Logout</h3> \r\n  )\r\n}\r\n\r\n\r\nexport default Logout\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\nimport Logout from './Logout'\r\n\r\n\r\nconst Navbar = () => {\r\n  const [userName, setUserName] = useState('')\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n  const [isAuthenticatedState, setIsAuthenticatedState] = useState(false)\r\n \r\n  useEffect(() => {\r\n    setIsAuthenticatedState(isAuthenticated)\r\n\r\n    if(isAuthenticatedState) {\r\n      const url = '/api/profiles/current/user/'\r\n      const request = {\r\n        method: 'GET',\r\n        headers: {\r\n          'accepts': 'application/json',\r\n          Authorization: `Token ${localStorage.getItem('accessToken')}`\r\n        }\r\n      }\r\n     \r\n      fetch(url, request)\r\n        .then(response => {\r\n          if(response.status === 200) {\r\n            return response.json()\r\n          }\r\n\r\n          else {\r\n            throw new Error(response.statusText)\r\n          } \r\n        })\r\n        .then(data => {\r\n          setUserName(data.username)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }, [isAuthenticated, isAuthenticatedState])\r\n \r\n  return (\r\n    <header id=\"main-header\">\r\n      <div className=\"container flexed\">\r\n        <Link to='/'><h1>TwitterClone</h1></Link>\r\n        <nav className=\"nav-bar flexed\">\r\n          {isAuthenticated && \r\n            <NavLink to='/home' activeClassName=\"active\" >\r\n              <h3 className=\"nav-btn\">Home</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && \r\n            <NavLink to={`/profiles/${userName}`} activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Profile</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && \r\n            <NavLink to=\"/profiles/search\" activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Search</h3>\r\n            </NavLink>\r\n          }\r\n          {!isAuthenticated && \r\n            <NavLink to='/auth/login' activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Login</h3>\r\n            </NavLink>\r\n          }\r\n          {!isAuthenticated && \r\n            <NavLink to='/auth/register' activeClassName=\"active\">\r\n              <h3 className=\"nav-btn\">Register</h3>\r\n            </NavLink>\r\n          }\r\n          {isAuthenticated && <Logout />}  \r\n        </nav>     \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, {useState} from 'react'\r\n\r\n\r\nconst TweetCreate = (props) => {\r\n  const [content, setContent] = useState('')\r\n  \r\n  const handleTweet = (event) => {\r\n    event.preventDefault()\r\n   \r\n    const data = {\r\n      content: content\r\n    }\r\n   \r\n    const url = '/api/tweets/create/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {  \r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {   \r\n        if(response.status === 201) {\r\n          props.onTweetAdd()\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 400) {\r\n          throw new Error('Try a shorter tweet')\r\n        }\r\n\r\n        if(response.status === 401) {\r\n          throw new Error('Login first to perform this action')\r\n        }      \r\n        \r\n        else {\r\n          throw new Error('Something wrong happend!')\r\n        }\r\n        \r\n      })\r\n      .then(() => {\r\n        setContent('') \r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n \r\n  return (\r\n    <form onSubmit={(e) => handleTweet(e)} action=\"\" method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <textarea \r\n          name=\"content\" \r\n          id=\"id_content\" cols=\"50\" \r\n          rows=\"7\" \r\n          placeholder=\"Your tweet...\" \r\n          required={true} \r\n          value={content} \r\n          onChange={e => setContent(e.target.value)}\r\n          autoComplete=\"off\">\r\n        </textarea>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <button type=\"submit\" className=\"prim-btn cursor\">Tweet</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default TweetCreate","import React, {useState} from 'react'\r\n\r\n\r\nconst LikeBtn = (props) => {\r\n  const [likes, setLikes] = useState(props.tweetLikes)\r\n  const [isLiked, setIsLiked] = useState(props.isLiked)\r\n\r\n    const handleLike = (tweetId) => {\r\n      const url = `/api/tweets/${tweetId}/like/`\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json', \r\n          'Accept': 'application/json'\r\n        }   \r\n      }\r\n\r\n      fetch(url, request)\r\n        .then(response => {\r\n          if(response.status === 200) {\r\n            return response.json()\r\n          }\r\n\r\n          else {\r\n            throw new Error()\r\n          }\r\n        })\r\n        .then((data) => {\r\n          data.type==='like'? setLikes(likes+ 1): setLikes(likes- 1) \r\n          data.type==='like'? setIsLiked(true): setIsLiked(false) \r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n    }\r\n\r\n  return (\r\n    <button onClick={() => handleLike(props.tweetId)} className=\"prim-btn tweet-container-item cursor\">\r\n      {!isLiked && likes + ' likes'} \r\n      {isLiked && likes + ' liked'} \r\n    </button>\r\n  )\r\n}\r\n\r\n\r\nexport default LikeBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst RetweetBtn = (props) => {\r\n  return (\r\n    <Link to={{\r\n      pathname: '/home/retweet',\r\n      state: {\r\n        tweet: props.tweet\r\n      }\r\n    }}>\r\n      <button className=\"prim-btn tweet-container-item cursor\">\r\n        retweet\r\n      </button>\r\n    </Link>\r\n  )\r\n}\r\n\r\n\r\nexport default RetweetBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Retweet = (props) => {\r\n  return ( \r\n    <article key={props.tweet.id} className=\"retweet-container\">\r\n      <header className=\"tweet-header\">\r\n        <div id=\"tweet-profile-pic\">\r\n          <img src={`${props.tweet.profile_pic}`} alt=\"\"/>\r\n        </div>\r\n        <Link to={`/profiles/${props.tweet.username}`}><h3 className=\"tweet-container-item\">{props.tweet.username}</h3></Link>\r\n      </header>\r\n      <p className=\"tweet-container-item\">\r\n        {props.tweet.content}\r\n      </p>\r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Retweet","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport LikeBtn from './LikeBtn'\r\nimport Retweetbtn from './RetweetBtn'\r\nimport Retweet from './Retweet'\r\n\r\n\r\nconst Tweet = (props) => {\r\n  return ( \r\n    <article key={props.tweet.id} className=\"tweet-container\">\r\n      <header className=\"tweet-header\">\r\n        <div id=\"tweet-profile-pic\">\r\n          <img src={`${props.tweet.profile_pic}`} alt=\"\"/>\r\n        </div>\r\n        <Link to={`/profiles/${props.tweet.username}`}><h3 className=\"tweet-container-item\">{props.tweet.username}</h3></Link>\r\n      </header>\r\n      <p className=\"tweet-container-item\">\r\n        {props.tweet.content}\r\n      </p>\r\n      {props.tweet.is_retweet && <Retweet tweet={props.tweet.retweet} />}\r\n      <LikeBtn tweetId={props.tweet.id} tweetLikes={props.tweet.likes} isLiked={props.tweet.isLiked} />\r\n      <Retweetbtn tweet={props.tweet} onTweetAdd={props.onTweetAdd} />\r\n      \r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Tweet","import React, {Fragment, useState} from 'react'\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport Retweet from './Retweet'\r\n\r\n\r\nconst RetweetCreate = () => {\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [content, setContent] = useState('')\r\n \r\n  const handleRetweet = (event) => {\r\n    event.preventDefault()\r\n    \r\n    const url = `/api/tweets/${location.state.tweet.id}/retweet/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({content: content})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 201) {\r\n          history.push('/home')\r\n          return \r\n        }\r\n\r\n        else {\r\n          throw new Error('Something wrong happend!')\r\n        }\r\n\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={(e) => handleRetweet(e)} method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <textarea \r\n            name=\"content\" \r\n            id=\"id_content\" cols=\"50\" \r\n            rows=\"7\" \r\n            placeholder=\"Add a comment\" \r\n            required={true} \r\n            value={content} \r\n            onChange={e => setContent(e.target.value)}\r\n            autoComplete=\"off\">\r\n          </textarea>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <button type=\"submit\" className=\"prim-btn cursor\">Retweet</button>\r\n        </div>\r\n      </form>\r\n      <Retweet tweet={location.state.tweet} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RetweetCreate\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Tweets.css'\r\nimport TweetCreate from './TweetCreate'\r\nimport Tweet from './Tweet'\r\nimport RetweetCreate from './RetweetCreate'\r\n\r\n\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [isTweetAdded, setIsTweetAdded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const url = '/api/tweets/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Token  ${localStorage.getItem('accessToken')}`, \r\n        'Accept': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then((response) => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error(response.statusText)\r\n        }    \r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setTweets(data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error);\r\n      })\r\n    }, [isTweetAdded])\r\n    \r\n    const onTweetAdd = () => {\r\n      setIsTweetAdded(!isTweetAdded)\r\n    }\r\n    \r\n  return ( \r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <Route exact path='/home'>\r\n          <TweetCreate onTweetAdd={onTweetAdd} />\r\n          {!isLoaded && <div className=\"loader\"></div>}\r\n          {error && <h1 className=\"message\">Error</h1>}\r\n          {!error && \r\n            <section id=\"tweets-container\">    \r\n              {tweets.map((tweet) => (\r\n                <Tweet key={tweet.id} tweet={tweet} onTweetAdd={onTweetAdd} />\r\n                ))}\r\n            </section>\r\n          }\r\n        </Route>\r\n        <Route exact path='/home/retweet'>\r\n          <RetweetCreate />\r\n        </Route>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>\r\n    </main> \r\n  )\r\n}\r\n\r\n\r\nexport default Tweets","import React, {useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Login = () => {\r\n  const {setIsAuthenticated} = useContext(AuthContext)\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n  const clearFields = () => {\r\n    setUserName('')\r\n    setPassword('')\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    }\r\n    \r\n    const url = '/api/auth/login/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if(response.status === 200) {     \r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error('Try again')\r\n        }\r\n\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem('accessToken', data.token)\r\n        setIsAuthenticated(true)\r\n        history.push('/home')\r\n      })\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n  return ( \r\n    <form onSubmit={e => handleLogin(e)} action=\"\" method=\"POST\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <h1 className=\"main-color\">Log In</h1>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_username\">Username</label>\r\n        <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)} required={true} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_password\">Password</label>\r\n        <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Log In\" className=\"prim-btn cursor\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Login","import React, {Fragment, useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\n\r\nconst Register = () => {\r\n  const [username, setUserName] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const history = useHistory()\r\n\r\n  const clearFields = () => {\r\n    setUserName('')\r\n    setName('')\r\n    setPassword('')\r\n    setPassword2('')\r\n    setEmail('')\r\n  }\r\n  \r\n  const handleRegister = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      name: name,\r\n      password: password,\r\n      password2: password2,\r\n      email: email,\r\n    }\r\n  \r\n    const url = '/api/auth/register/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if(response.status === 201) {     \r\n          history.push('/auth/login')\r\n        }\r\n\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data) {\r\n          throw new Error(data[Object.keys(data)[0]])\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleRegister(e)} method=\"POST\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1 className=\"main-color\">Register</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_name\">Name</label>\r\n          <input type=\"text\" name=\"name\" id=\"id_name\" value={name} onChange={e => setName(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">Password</label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password2\">Confirm Password</label>\r\n          <input type=\"password\" name=\"password2\" id=\"id_password2\" value={password2} onChange={e => setPassword2(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_email\">Email</label>\r\n          <input type=\"email\" name=\"email\" id=\"id_email\" value={email} onChange={e => setEmail(e.target.value)} autoComplete=\"off\"/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Register\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <div className=\"centered\">\r\n        <p>Already a user? <Link to=\"/auth/login\" className=\"main-color\">Login</Link></p>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default Register","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\n\r\nconst AuthenticatedRoute = ({children, ...rest}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      !localStorage.getItem('accessToken') ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/home',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Base.css'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport AuthenticatedRoute from './../utilities/AuthenticatedRoute'\r\n\r\n\r\nconst Base = () => {\r\n  return (\r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <AuthenticatedRoute exact path='/auth/login'>\r\n          <Login />\r\n        </AuthenticatedRoute>\r\n        <AuthenticatedRoute exact path='/auth/register'>\r\n          <Register />    \r\n        </AuthenticatedRoute>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>  \r\n    </main>  \r\n  )\r\n}\r\n\r\n\r\nexport default Base","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <main id=\"welcome\">\r\n      <div id=\"join-us\">     \r\n        <Link to='/auth/register'><h1 >Join Us</h1></Link>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Landing","import React, {Fragment, useState, useEffect} from 'react'\r\n\r\n\r\nconst FollowBtn = (props) => {\r\n  const [isFollowed, setIsFollowed] = useState(false)\r\n\r\n  useEffect(()=> {\r\n    setIsFollowed(props.isFollowed)\r\n  }, [props.isFollowed])\r\n\r\n  const handleFollow = () => {\r\n    const url = `/api/profiles/${props.username}/follow/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        throw new Error()\r\n      })\r\n      .then(data => {\r\n        if(data.message === 'followed') {\r\n          setIsFollowed(true)\r\n        }\r\n\r\n        if(data.message === 'unfollowed') {\r\n          setIsFollowed(false)\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isFollowed && \r\n        <h3 onClick={handleFollow} className=\"prim-btn-2 cursor\">Unfollow</h3>\r\n      }\r\n      {!isFollowed && \r\n        <h3 onClick={handleFollow} className=\"prim-btn-2 cursor\">Follow</h3>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FollowBtn\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport FollowBtn from './FollowBtn'\r\nimport Tweet from './../tweets/Tweet'\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n  const [profileData, setProfileData] = useState({})\r\n  const [tweetsData, setTweetsData] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const {username} = useParams()\r\n\r\n  useEffect(() => {\r\n    const url = `/api/profiles/${username}/`\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 404) {\r\n          setUser(false)\r\n          throw new Error('User not found')\r\n        }\r\n\r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setUser(true)\r\n        setError(false)\r\n        setUserData(data.user_data)\r\n        setProfileData(data.profile_data)\r\n        setTweetsData(data.tweets_data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error)\r\n      })\r\n  }, [username])\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoaded && <div className=\"loader\"></div>}\r\n      {isLoaded && !user && \r\n        <h1 className=\"centered\">User Not Found</h1>\r\n      }\r\n      {error && user && <h1 className=\"message\">Something wrog happend!</h1>}\r\n      {!error && isLoaded &&\r\n        <Fragment>\r\n          <section id=\"profile-info\">\r\n            <header id=\"profile-header\" className=\"flexed\">\r\n              <div id=\"profile-pic\">\r\n                <img src={`${profileData.profile_pic}`} alt=\"\"/>\r\n              </div>\r\n              <h1>{profileData.tweets_count} Tweets</h1>\r\n              {userData.is_current_user && \r\n                <Link to=\"/settings\">\r\n                  <h3 className=\"prim-btn-2\">Edit Profile</h3>\r\n                </Link>  \r\n              }\r\n              {!userData.is_current_user && \r\n                <FollowBtn\r\n                  isFollowed={userData.is_followed} \r\n                  username={userData.username}>\r\n                </FollowBtn>\r\n              }\r\n            </header>\r\n            <h1 className=\"bolder\">{profileData.name}</h1>\r\n            <p className=\"light-text-color\">@{userData.username}</p> \r\n            <p>{profileData.bio}</p> \r\n            <p className=\"light-text-color \">Joined {userData.date_joined}</p>\r\n            {profileData.birthday &&\r\n              <p className=\"light-text-color \">Born {profileData.birthday}</p>\r\n            }\r\n            <p className=\"light-text-color\">\r\n          <span className=\"bolder\"> {profileData.following_count} </span> Following \r\n              <span className=\"bold\"> {profileData.followers_count} </span>Followers\r\n            </p>\r\n          </section>\r\n          <section id=\"tweets-container\">    \r\n            {tweetsData.map((tweet) => (\r\n              <Tweet key={tweet.id} tweet={tweet} />\r\n            ))}\r\n          </section>\r\n        </Fragment>\r\n      }\r\n    </Fragment>  \r\n  )\r\n}\r\n\r\n\r\nexport default Profile","import React, {Fragment, useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst SearchProfiles = () => {\r\n  const [user, setUsers] = useState([])\r\n  const [username, setUsername] = useState('')\r\n\r\n  useEffect(() => {\r\n    const url = '/api/profiles/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token  ${localStorage.getItem('accessToken')}`,\r\n        'Content-Type': 'application/json', \r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({'username': username})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        throw new Error()\r\n      })\r\n      .then(data => {\r\n        setUsers(data || [])\r\n      })\r\n      .catch(error => console.log(error))\r\n  }, [username])\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      <header className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1 className=\"main-color\">Search Users</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"id_username\" required={true} autoComplete=\"off\" onChange={e => {setUsername(e.target.value)}}/>\r\n        </div>\r\n        <div></div>\r\n      </header>\r\n      <section id=\"settings-list\">\r\n        {user.map((user) => (\r\n          <Link key={user.id} to={`/profile/${user.username}`}><h2>{user.username}</h2></Link>\r\n        ))}\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchProfiles\r\n","import React from 'react'\r\nimport './Profiles.css'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport Profile from './Profile'\r\nimport SearchProfiles from './SearchProfiles'\r\n\r\nconst Profiles = () => {\r\n  return ( \r\n    <main id=\"page-container\">\r\n      <Switch>\r\n        <Route exact path='/profiles/search'>\r\n          <SearchProfiles />\r\n        </Route>\r\n        <Route exact path='/profiles/:username'>\r\n          <Profile />\r\n        </Route>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profiles\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst ProfileSettings = () => {\r\n  const [bio, setBio] = useState('')\r\n  const [birthday, setBirthday] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [profilePic, setProfilePic] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const url = 'http://127.0.0.1:8000/api/settings/update/profile/'\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        setBio(data.bio || '')\r\n        setBirthday(data.birthday || '')\r\n        setName(data.name)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.append('bio', bio)\r\n    formData.append('birthday', birthday)\r\n    formData.append('name', name)\r\n\r\n    if(profilePic) {\r\n      formData.append('profile_pic', profilePic, profilePic.name)\r\n    }\r\n\r\n    const url = '/api/settings/update/profile/'\r\n    const request = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n      },\r\n      body: formData\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n         alert('updated')\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\" encType=\"multipart/form-data\">\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_name\">Name</label>\r\n        <input type=\"text\" name=\"name\" id=\"id_name\" value={name} onChange={e => setName(e.target.value)} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_bio\">Bio</label>\r\n        <input type=\"text\" name=\"bio\" id=\"id_bio\" value={bio} onChange={e => setBio(e.target.value)} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"\">Birthday</label>\r\n        <input type=\"date\" name=\"birthday\" id=\"id_birthday\" value={birthday} onChange={e => setBirthday(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_image\">Profile Picture:</label> \r\n        <div className=\"fileUpload prim-btn-2\">\r\n          <span>Upload</span> \r\n          <input type=\"file\" name=\"profile_pic\" id=\"id_profile_pic\" className=\"upload\" accept=\"image/*\" onChange={e => setProfilePic(e.target.files[0])}/> \r\n        </div>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProfileSettings\r\n","import React, {useState} from 'react'\r\n\r\nconst PasswordSettings = () => {\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPassword2, setNewPassword2] = useState('')\r\n\r\n  const clearFields = () => {\r\n    setOldPassword('')\r\n    setNewPassword('')\r\n    setNewPassword2('')\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      old_password: oldPassword,\r\n      new_password: newPassword,\r\n      new_password2: newPassword2\r\n    }\r\n\r\n    const url = '/api/settings/update/password/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 401) {\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 400) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        console.log(data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\">  \r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">Old Password</label>\r\n        <input type=\"password\" name=\"old_password\" id=\"id_old_password\" value={oldPassword} onChange={e => setOldPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">New Password</label>\r\n        <input type=\"password\" name=\"new_password\" id=\"id_new_password\" value={newPassword} onChange={e => setNewPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_old_password\">Confirm New Password</label>\r\n        <input type=\"password\" name=\"new_password2\" id=\"id_new_password2\" value={newPassword2} onChange={e => setNewPassword2(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PasswordSettings\r\n","import React, {useState} from 'react'\r\n\r\nconst EmailSettings = () => {\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  \r\n  const clearFields = () => {\r\n    setPassword('')\r\n    setEmail('')\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      password: password,\r\n      email: email,\r\n    }\r\n\r\n    const url = '/api/settings/update/email/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        clearFields()\r\n        \r\n        if([200, 401, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.message) {\r\n          alert(data.message)\r\n        }\r\n\r\n        if(data.success) {\r\n          alert(data.success)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleUpdate(e)} action=\"POST\" className=\"form-container\">  \r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_password\">Confirm Password</label>\r\n        <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_email\">New Email</label>\r\n        <input type=\"email\" name=\"email\" id=\"id_email\" value={email} onChange={e => setEmail(e.target.value)} required={true} autoComplete=\"off\"/>\r\n      </div>\r\n      <div className=\"form-item\">\r\n        <input type=\"submit\" value=\"Update\" className=\"prim-btn cursor text-color\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EmailSettings\r\n","import React, {Fragment, useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst LogoutallSettings = () => {\r\n  const [password, setPassword] = useState('')\r\n  const {setIsAuthenticated} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n  const handleConfirm = (event) => {\r\n    event.preventDefault()\r\n\r\n    const url = 'http://127.0.0.1:8000/api/auth/confirmpassword/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({password: password})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        setPassword('')\r\n\r\n        if([200, 401, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.message) {\r\n          alert(data.message)\r\n        }\r\n\r\n        if(data.success) {\r\n          document.getElementById('confirm-delete').style.display = 'block'\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const handleLogout = (event) => {\r\n    const url = '/api/auth/logoutall/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 204) {\r\n          localStorage.removeItem('accessToken')\r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })  \r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleConfirm(e)} action=\"POST\" className=\"form-container\">  \r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">\r\n            Confirm Password To Logout All Devices\r\n          </label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Confirm\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <h2 id=\"confirm-delete\" className=\"centered cursor\" onClick={e => handleLogout(e)}>Logout All Devices</h2>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LogoutallSettings","import React, {Fragment, useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst LogoutallSettings = () => {\r\n  const [password, setPassword] = useState('')\r\n  const {setIsAuthenticated} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n  const handleConfirm = (event) => {\r\n    event.preventDefault()\r\n\r\n    const url = '/api/auth/confirmpassword/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({password: password})\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        setPassword('')\r\n\r\n        if([200, 401, 400].includes(response.status)) {\r\n          return response.json()\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data.message) {\r\n          alert(data.message)\r\n        }\r\n\r\n        if(data.success) {\r\n          document.getElementById('confirm-delete').style.display = 'block'\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const handleDelete = (event) => {\r\n    const url = '/api/settings/delete/profile/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          localStorage.removeItem('accessToken')\r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n        else {\r\n          throw new Error()\r\n        }\r\n      })  \r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={e => handleConfirm(e)} action=\"POST\" className=\"form-container\">  \r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">\r\n            Confirm Password To Delete Account\r\n          </label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)} required={true}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Confirm\" className=\"prim-btn cursor text-color\"/>\r\n        </div>\r\n      </form>\r\n      <h2 id=\"confirm-delete\" className=\"centered cursor\" onClick={e => handleDelete(e)}>Delete Account</h2>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LogoutallSettings","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Icon.css'\r\n\r\nconst BackIcon = (props) => {\r\n  return (\r\n    <Link to={props.to}>\r\n      <div id=\"back\"> \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M20 11H6.83l2.88-2.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L3.71 11.3c-.39.39-.39 1.02 0 1.41L8.3 17.3c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L6.83 13H20c.55 0 1-.45 1-1s-.45-1-1-1z\"/>\r\n        </svg>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default BackIcon","import React from 'react'\r\nimport {Switch, Route, Link} from 'react-router-dom'\r\nimport './Settings.css'\r\nimport ProfileSettings from './ProfileSettings'\r\nimport PasswordSettings from './PasswordSettings'\r\nimport EmailSettings from './EmailSettings'\r\nimport LogoutallSettings from './LogoutallSettings'\r\nimport DeleteAccount from './DeleteAccount'\r\nimport BackIcon from './../icons/BackIcon'\r\n\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <main id=\"page-container\" className=\"container\">\r\n      <Switch>\r\n        <Route exact path='/settings'>\r\n          <header id=\"settings-list\"> \r\n            <Link to='/settings/profile'><h2>Profile</h2></Link>\r\n            <Link to='/settings/password'><h2 >Password</h2></Link>\r\n            <Link to='/settings/email'><h2 >Email</h2></Link>\r\n            <Link to='/settings/logoutall'><h2 >Logout All Devices</h2></Link>\r\n            <Link to='/settings/delete/profile'><h2 >Delete Account</h2></Link>\r\n          </header>\r\n        </Route>\r\n        <Route exact path='/settings/profile'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Profile</h1>\r\n          </div>\r\n          <ProfileSettings />\r\n        </Route>\r\n        <Route exact path='/settings/password'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Password</h1>\r\n          </div>\r\n          <PasswordSettings />\r\n        </Route>\r\n        <Route exact path='/settings/email'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Update Email</h1>\r\n          </div>\r\n          <EmailSettings />\r\n        </Route>\r\n        <Route exact path='/settings/logoutall'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Logout All Devices</h1>\r\n          </div>\r\n          <LogoutallSettings />\r\n        </Route>\r\n        <Route exact path='/settings/delete/profile'>\r\n          <div className=\"settings-header\">\r\n            <BackIcon to='/settings'/>\r\n            <h1>Delete Acccount</h1>\r\n          </div>\r\n          <DeleteAccount />\r\n        </Route>\r\n        <Route>\r\n          <h1 className=\"centered\">Not Found</h1>\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport AuthContext from './utilities/AuthContext'\r\nimport PrivateRoute from './utilities/PrivateRoute'\r\nimport './App.css'\r\nimport './Form.css'\r\nimport './variables.css'\r\nimport Navbar from './base/Navbar'\r\nimport Tweets from './tweets/Tweets'\r\nimport Base from './base/Base'\r\nimport Landing from './base/Landing'\r\nimport Profiles from './profiles/Profiles'\r\nimport Settings from './settings/Settings'\r\n\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  const value = {isAuthenticated, setIsAuthenticated}\r\n\r\n  useEffect(() => {\r\n    const myToken = localStorage.getItem('accessToken')\r\n    myToken? setIsAuthenticated(true): setIsAuthenticated(false)\r\n  }, [isAuthenticated])\r\n\r\n  \r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Landing />\r\n          </Route> \r\n          <Route path='/auth'>\r\n            <Navbar />  \r\n            <Base /> \r\n          </Route> \r\n          <PrivateRoute path='/home'>\r\n            <Navbar />  \r\n            <Tweets /> \r\n          </PrivateRoute>\r\n          <PrivateRoute path='/profiles'>\r\n            <Navbar />\r\n            <Profiles />     \r\n          </PrivateRoute>\r\n          <PrivateRoute path='/settings'>\r\n            <Navbar />  \r\n            <Settings /> \r\n          </PrivateRoute>\r\n          <Route>\r\n            <h1 className=\"centered\">Not Found</h1>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}