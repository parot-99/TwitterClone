{"version":3,"sources":["utilities/AuthContext.js","utilities/PrivateRoute.js","base/Logout.js","base/Navbar.js","messages/Message.js","tweets/TweetCreate.js","tweets/LikeBtn.js","tweets/RetweetBtn.js","tweets/TweetList.js","tweets/Tweets.js","base/Login.js","base/Register.js","base/Base.js","base/Landing.js","profiles/profile.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","isAuthenticated","setIsAuthenticated","PrivateRoute","children","rest","render","location","localStorage","getItem","to","pathname","state","from","Logout","useContext","history","useHistory","onClick","request","method","headers","Authorization","fetch","then","response","status","removeItem","push","catch","error","alert","handleLogout","className","Navbar","id","Message","props","propClass","message","TweetCreate","useState","content","setContent","setError","errorMsg","setErrorMsg","onSubmit","e","event","preventDefault","data","body","JSON","stringify","onTweetAdd","json","Error","handleTweet","action","htmlFor","name","cols","rows","placeholder","required","value","onChange","target","type","LikeBtn","tweetLikes","likes","setLikes","isLiked","setIsLiked","tweetId","url","handleLike","RetweetBtn","console","log","handleRetweet","TweetList","tweets","map","tweet","key","user","username","is_retweet","retweet","Tweets","setTweets","isLoaded","setIsLoaded","isTweetAdded","setIsTweetAdded","useEffect","Login","setUserName","password","setPassword","setItem","token","handleLogin","Register","Base","path","Landing","Profile","userData","setUserData","isUser","setIsUser","useParams","email","is_current_user","App","myToken","Provider","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb8c6bc0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AuthContext = React.createContext({\r\n  isAuthenticated: false,\r\n  setIsAuthenticated: () => {}  \r\n})\r\n\r\nexport default AuthContext","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      localStorage.getItem('accessToken') ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/auth/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, {useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Logout = () => {\r\n  const {setIsAuthenticated} = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n\tconst handleLogout = () => {\r\n    const url = 'http://127.0.0.1:8000/api/auth/logout/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Token  ${localStorage.getItem('accessToken')}`\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 204) {     \r\n          localStorage.removeItem('accessToken')\r\n          setIsAuthenticated(false)\r\n          history.push('/')\r\n        }\r\n\r\n      })\r\n      .catch(error => alert(error))\r\n\t}\r\n\r\n  return (\r\n    <h3 onClick={() => handleLogout()} className=\"nav-btn cursor clicked\">Logout</h3> \r\n  )\r\n}\r\n\r\n\r\nexport default Logout\r\n","import React, {useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\nimport Logout from './Logout'\r\n\r\n\r\nconst Navbar = () => {\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n  \r\n  return (\r\n    <header id=\"main-header\">\r\n      <div className=\"container flexed\">\r\n        <Link to='/'><h1 className=\"cursor clicked\">TwitterClone</h1></Link>\r\n        <nav className=\"nav-bar flexed\">\r\n          <Link to='/home'><h3 className=\"nav-btn cursor clicked\">Home</h3></Link>\r\n          <Link to='#'><h3 className=\"nav-btn cursor clicked\">Contact</h3></Link>\r\n          {!isAuthenticated && <Link to='/auth/Login'><h3 className=\"nav-btn cursor clicked\">Login</h3></Link>}\r\n          {isAuthenticated && <Logout />}  \r\n        </nav>     \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './Messages.css'\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <p className={props.propClass}>{props.message}</p>\r\n  )\r\n}\r\n\r\n\r\nexport default Message","import React, {useState} from 'react'\r\nimport Message from './../messages/Message'\r\n\r\n\r\nconst TweetCreate = (props) => {\r\n  const [content, setContent] = useState('')\r\n  const [error, setError] = useState(false)\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n  const handleTweet = (event) => {\r\n    event.preventDefault()\r\n   \r\n    const data = {\r\n      content: content\r\n    }\r\n   \r\n    const url = 'http://127.0.0.1:8000/api/tweets/create/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {  \r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}` \r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {   \r\n        if(response.status === 201) {\r\n          props.onTweetAdd()\r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 400) {\r\n          throw new Error('Try a shorter tweet')\r\n        }\r\n\r\n        if(response.status === 401) {\r\n          throw new Error('Login first to perform this action')\r\n        }        \r\n      })\r\n      .then(() => {\r\n        setContent('') \r\n      })\r\n      .catch((error) => {\r\n        setContent('')\r\n        setError(true)\r\n        setErrorMsg(error.message)\r\n      })\r\n  }\r\n \r\n  return (\r\n    <form onSubmit={(e) => handleTweet(e)} action=\"\" method=\"POST\" id=\"tweet-create-form\" className=\"form-container\">\r\n      <div className=\"form-item\">\r\n        <label htmlFor=\"id_content\">Content: </label>\r\n        <textarea name=\"content\" id=\"id_content\" cols=\"50\" rows=\"7\" placeholder=\"Your tweet...\" required={true} value={content} onChange={e => setContent(e.target.value)}></textarea>\r\n      </div>\r\n      {error && <div className=\"form-item\">{<Message propClass='failure' message={errorMsg} />}</div>}\r\n      <div className=\"form-item\">\r\n        <button type=\"submit\" className=\"prim-btn cursor\">Tweet</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default TweetCreate","import React, {useState} from 'react'\r\n\r\n\r\nconst LikeBtn = (props) => {\r\n  const [likes, setLikes] = useState(props.tweetLikes)\r\n  const [isLiked, setIsLiked] = useState(props.isLiked)\r\n\r\n\tconst handleLike = (tweetId) => {\r\n\t\tconst url = `http://127.0.0.1:8000/api/tweets/${tweetId}/like/`\r\n\t\tconst request = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${localStorage.getItem('accessToken')}`\r\n      }   \r\n\t\t}\r\n\r\n\t\tfetch(url, request)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif(response.status === 200) {\r\n\t\t\t\t\treturn response.json()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(response.status === 401) {\r\n\t\t\t\t\tthrow new Error('Login first to perform this action')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n        data.type==='like'? setLikes(likes+ 1): setLikes(likes- 1) \r\n        data.type==='like'? setIsLiked(true): setIsLiked(false) \r\n      })\r\n\t\t\t.catch(error => {\r\n        alert(error)\r\n      })\r\n\t}\r\n\r\n  return (\r\n    <button onClick={() => handleLike(props.tweetId)} className=\"prim-btn tweet-container-item cursor\">\r\n      {!isLiked && likes + ' likes'} \r\n      {isLiked && likes + ' liked'} \r\n    </button>\r\n  )\r\n}\r\n\r\n\r\nexport default LikeBtn","import React from 'react'\r\n\r\n\r\nconst RetweetBtn = (props) => {\r\n  const handleRetweet = (tweetId) => {\r\n    const url = `http://127.0.0.1:8000/api/tweets/${tweetId}/retweet/`\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 201) {\r\n          return \r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <button onClick={() => handleRetweet(props.tweetId)} className=\"prim-btn tweet-container-item cursor\">\r\n      retweet\r\n    </button>\r\n  )\r\n}\r\n\r\n\r\nexport default RetweetBtn","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport LikeBtn from './LikeBtn'\r\nimport Retweetbtn from './RetweetBtn'\r\n\r\n\r\nconst TweetList = (props) => {\r\n  return ( \r\n    <section id=\"tweets-container\">    \r\n      {props.tweets.map((tweet) => (\r\n        <article key={tweet.id} className=\"tweet-container\">\r\n          <Link to={`/profile/${tweet.user.username}`}><h2 className=\"tweet-container-item\">{tweet.user.username}</h2></Link>\r\n          <h4 className=\"tweet-container-item\">\r\n            {tweet.id} {'->'} \r\n            {tweet.is_retweet && tweet.retweet.content}\r\n            {!tweet.is_retweet && tweet.content}\r\n          </h4>\r\n          <LikeBtn tweetId={tweet.id} tweetLikes={tweet.likes} isLiked={tweet.isLiked} />\r\n          <Retweetbtn tweetId={tweet.id} />\r\n        </article>\r\n      ))}   \r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default TweetList","import React, {useState, useEffect} from 'react'\r\nimport './Tweets.css'\r\nimport TweetCreate from './TweetCreate'\r\nimport TweetList from './TweetList'\r\n\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [isTweetAdded, setIsTweetAdded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const url = 'http://127.0.0.1:8000/api/tweets/'\r\n    const request = {\r\n      method: 'get',\r\n      headers: {\r\n        'X-Requested-With': 'XMLHttpRequest', \r\n        'Content-Type': \"application/json\", \r\n        'Accept': \"application/json\",\r\n        Authorization: `Token  ${localStorage.getItem('accessToken')}`\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then((response) => {\r\n        if(response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        setIsLoaded(true)\r\n        setTweets(data)\r\n      })\r\n      .catch(error => {\r\n        setIsLoaded(true)\r\n        setError(true)\r\n        console.log(error);\r\n      })\r\n    }, [isTweetAdded])\r\n    \r\n    const onTweetAdd = () => {\r\n      setIsTweetAdded(!isTweetAdded)\r\n    }\r\n    \r\n  return (\r\n    <main id=\"page-container\">\r\n      <TweetCreate onTweetAdd={onTweetAdd} />\r\n      {!isLoaded && <h1 className=\"message\">Loading</h1>}\r\n      {error && <h1 className=\"message\">Error</h1>}\r\n      {!error && <TweetList tweets={tweets || []} />}\r\n    </main> \r\n  )\r\n}\r\n\r\n\r\nexport default Tweets","import React, {useState, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport AuthContext from './../utilities/AuthContext'\r\n\r\n\r\nconst Login = () => {\r\n  const {setIsAuthenticated} = useContext(AuthContext)\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n  \r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    }\r\n    \r\n    const url = 'http://127.0.0.1:8000/api/auth/login/'\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        setUserName('')\r\n        setPassword('')\r\n        \r\n        if(response.status === 200) {     \r\n          return response.json()\r\n        }\r\n\r\n        if(response.status === 401) {\r\n          throw new Error('Try again')\r\n        }\r\n\r\n        if(response.status === 400) {\r\n          throw new Error('Try again')\r\n        }\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem('accessToken', data.token)\r\n        setIsAuthenticated(true)\r\n        history.push('/home')\r\n      })\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n  return (\r\n    <main id=\"page-container\">\r\n      <form onSubmit={e => handleLogin(e)} action=\"\" method=\"POST\" className=\"form-container\">\r\n        <div className=\"form-item\">\r\n          <h1>Log In</h1>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_username\">Username</label>\r\n          <input type=\"text\" name=\"username\" id=\"id_username\" value={username} onChange={e => setUserName(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"id_password\">Password</label>\r\n          <input type=\"password\" name=\"password\" id=\"id_password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <input type=\"submit\" value=\"Log In\" className=\"prim-btn cursor\"/>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Login","import React from 'react'\r\n\r\n\r\nconst Register = () => {\r\n  return (\r\n    <main id=\"page-container\">\r\n      <h1>Register</h1>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Register","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport './Base.css'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport Navbar from './Navbar'\r\n\r\n\r\nconst Base = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/auth/login'>\r\n        <Navbar />\r\n        <Login />\r\n      </Route>\r\n      <Route path='/auth/register'>\r\n        <Navbar />\r\n        <Register />    \r\n      </Route>\r\n    </Switch>    \r\n  )\r\n}\r\n\r\n\r\nexport default Base","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <main id=\"welcome\">\r\n      <div id=\"join-us\">     \r\n        <Link to='/auth/login'><h1 >Join Us</h1></Link>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Landing","import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState({})\r\n  const [isUser, setIsUser] = useState(false)\r\n  const {username} = useParams()\r\n\r\n  useEffect(() => {\r\n    const url = `http://127.0.0.1:8000/api/profiles/${username}/`\r\n    const request = {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('accessToken')}`\r\n      }\r\n    }\r\n\r\n    fetch(url, request)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          setIsUser(true)\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => setUserData(data))\r\n      .catch(error => console.log(error))\r\n  }, [username])\r\n\r\n  return (\r\n    <main id=\"page-container\">\r\n      <h1>{isUser && userData.username}</h1>\r\n      <h1>{isUser && userData.email}</h1>\r\n      <h1>{isUser && userData.is_current_user && 'Current User'}</h1>\r\n      <h1>{!isUser && 'User does not exist'}</h1> \r\n    </main>  \r\n  )\r\n}\r\n\r\n\r\nexport default Profile","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport AuthContext from './utilities/AuthContext'\nimport PrivateRoute from './utilities/PrivateRoute'\nimport './App.css';\nimport './variables.css'\nimport Navbar from './base/Navbar'\nimport Tweets from './tweets/Tweets'\nimport Base from './base/Base'\nimport Landing from './base/Landing'\nimport Profile from './profiles/profile'\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const value = {isAuthenticated, setIsAuthenticated}\n\n  useEffect(() => {\n    const myToken = localStorage.getItem('accessToken')\n    myToken? setIsAuthenticated(true): setIsAuthenticated(false)\n  }, [isAuthenticated])\n\n  \n  return (\n    <AuthContext.Provider value={value}>\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Landing />\n          </Route> \n          <Route path='/auth'>\n            <Base /> \n          </Route> \n          <PrivateRoute exact path='/home' isAuthenticated={isAuthenticated}>\n            <Navbar />  \n            <Tweets /> \n          </PrivateRoute>\n          <PrivateRoute exact path='/profile/:username'>\n            <Navbar />\n            <Profile />     \n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}